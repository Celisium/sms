.include "macros.inc"

.section .text, "ax"  # 0x80005600 - 0x8036FBA0
.global OSInitMutex
OSInitMutex:
/* 80090FF8 0008DF38  7C 08 02 A6 */	mflr r0
/* 80090FFC 0008DF3C  90 01 00 04 */	stw r0, 4(r1)
/* 80091000 0008DF40  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 80091004 0008DF44  93 E1 00 14 */	stw r31, 0x14(r1)
/* 80091008 0008DF48  7C 7F 1B 78 */	mr r31, r3
/* 8009100C 0008DF4C  48 00 1C 6D */	bl OSInitThreadQueue
/* 80091010 0008DF50  38 00 00 00 */	li r0, 0
/* 80091014 0008DF54  90 1F 00 08 */	stw r0, 8(r31)
/* 80091018 0008DF58  90 1F 00 0C */	stw r0, 0xc(r31)
/* 8009101C 0008DF5C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 80091020 0008DF60  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 80091024 0008DF64  38 21 00 18 */	addi r1, r1, 0x18
/* 80091028 0008DF68  7C 08 03 A6 */	mtlr r0
/* 8009102C 0008DF6C  4E 80 00 20 */	blr 

.global OSLockMutex
OSLockMutex:
/* 80091030 0008DF70  7C 08 02 A6 */	mflr r0
/* 80091034 0008DF74  90 01 00 04 */	stw r0, 4(r1)
/* 80091038 0008DF78  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 8009103C 0008DF7C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 80091040 0008DF80  93 C1 00 18 */	stw r30, 0x18(r1)
/* 80091044 0008DF84  93 A1 00 14 */	stw r29, 0x14(r1)
/* 80091048 0008DF88  93 81 00 10 */	stw r28, 0x10(r1)
/* 8009104C 0008DF8C  7C 7C 1B 78 */	mr r28, r3
/* 80091050 0008DF90  4B FF F1 7D */	bl OSDisableInterrupts
/* 80091054 0008DF94  7C 7D 1B 78 */	mr r29, r3
/* 80091058 0008DF98  48 00 1C 31 */	bl OSGetCurrentThread
/* 8009105C 0008DF9C  3B C3 00 00 */	addi r30, r3, 0
/* 80091060 0008DFA0  3B E0 00 00 */	li r31, 0
lbl_80091064:
/* 80091064 0008DFA4  80 1C 00 08 */	lwz r0, 8(r28)
/* 80091068 0008DFA8  28 00 00 00 */	cmplwi r0, 0
/* 8009106C 0008DFAC  40 82 00 40 */	bne lbl_800910AC
/* 80091070 0008DFB0  93 DC 00 08 */	stw r30, 8(r28)
/* 80091074 0008DFB4  80 7C 00 0C */	lwz r3, 0xc(r28)
/* 80091078 0008DFB8  38 03 00 01 */	addi r0, r3, 1
/* 8009107C 0008DFBC  90 1C 00 0C */	stw r0, 0xc(r28)
/* 80091080 0008DFC0  80 7E 02 F8 */	lwz r3, 0x2f8(r30)
/* 80091084 0008DFC4  28 03 00 00 */	cmplwi r3, 0
/* 80091088 0008DFC8  40 82 00 0C */	bne lbl_80091094
/* 8009108C 0008DFCC  93 9E 02 F4 */	stw r28, 0x2f4(r30)
/* 80091090 0008DFD0  48 00 00 08 */	b lbl_80091098
lbl_80091094:
/* 80091094 0008DFD4  93 83 00 10 */	stw r28, 0x10(r3)
lbl_80091098:
/* 80091098 0008DFD8  90 7C 00 14 */	stw r3, 0x14(r28)
/* 8009109C 0008DFDC  38 00 00 00 */	li r0, 0
/* 800910A0 0008DFE0  90 1C 00 10 */	stw r0, 0x10(r28)
/* 800910A4 0008DFE4  93 9E 02 F8 */	stw r28, 0x2f8(r30)
/* 800910A8 0008DFE8  48 00 00 3C */	b lbl_800910E4
lbl_800910AC:
/* 800910AC 0008DFEC  7C 00 F0 40 */	cmplw r0, r30
/* 800910B0 0008DFF0  40 82 00 14 */	bne lbl_800910C4
/* 800910B4 0008DFF4  80 7C 00 0C */	lwz r3, 0xc(r28)
/* 800910B8 0008DFF8  38 03 00 01 */	addi r0, r3, 1
/* 800910BC 0008DFFC  90 1C 00 0C */	stw r0, 0xc(r28)
/* 800910C0 0008E000  48 00 00 24 */	b lbl_800910E4
lbl_800910C4:
/* 800910C4 0008E004  93 9E 02 F0 */	stw r28, 0x2f0(r30)
/* 800910C8 0008E008  80 7C 00 08 */	lwz r3, 8(r28)
/* 800910CC 0008E00C  80 9E 02 D0 */	lwz r4, 0x2d0(r30)
/* 800910D0 0008E010  48 00 1E DD */	bl __OSPromoteThread
/* 800910D4 0008E014  7F 83 E3 78 */	mr r3, r28
/* 800910D8 0008E018  48 00 2B 29 */	bl OSSleepThread
/* 800910DC 0008E01C  93 FE 02 F0 */	stw r31, 0x2f0(r30)
/* 800910E0 0008E020  4B FF FF 84 */	b lbl_80091064
lbl_800910E4:
/* 800910E4 0008E024  7F A3 EB 78 */	mr r3, r29
/* 800910E8 0008E028  4B FF F1 0D */	bl OSRestoreInterrupts
/* 800910EC 0008E02C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800910F0 0008E030  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800910F4 0008E034  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800910F8 0008E038  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800910FC 0008E03C  83 81 00 10 */	lwz r28, 0x10(r1)
/* 80091100 0008E040  38 21 00 20 */	addi r1, r1, 0x20
/* 80091104 0008E044  7C 08 03 A6 */	mtlr r0
/* 80091108 0008E048  4E 80 00 20 */	blr 

.global OSUnlockMutex
OSUnlockMutex:
/* 8009110C 0008E04C  7C 08 02 A6 */	mflr r0
/* 80091110 0008E050  90 01 00 04 */	stw r0, 4(r1)
/* 80091114 0008E054  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 80091118 0008E058  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 8009111C 0008E05C  93 C1 00 18 */	stw r30, 0x18(r1)
/* 80091120 0008E060  93 A1 00 14 */	stw r29, 0x14(r1)
/* 80091124 0008E064  7C 7D 1B 78 */	mr r29, r3
/* 80091128 0008E068  4B FF F0 A5 */	bl OSDisableInterrupts
/* 8009112C 0008E06C  7C 7F 1B 78 */	mr r31, r3
/* 80091130 0008E070  48 00 1B 59 */	bl OSGetCurrentThread
/* 80091134 0008E074  80 1D 00 08 */	lwz r0, 8(r29)
/* 80091138 0008E078  3B C3 00 00 */	addi r30, r3, 0
/* 8009113C 0008E07C  7C 00 F0 40 */	cmplw r0, r30
/* 80091140 0008E080  40 82 00 70 */	bne lbl_800911B0
/* 80091144 0008E084  80 7D 00 0C */	lwz r3, 0xc(r29)
/* 80091148 0008E088  34 03 FF FF */	addic. r0, r3, -1
/* 8009114C 0008E08C  90 1D 00 0C */	stw r0, 0xc(r29)
/* 80091150 0008E090  40 82 00 60 */	bne lbl_800911B0
/* 80091154 0008E094  80 7D 00 10 */	lwz r3, 0x10(r29)
/* 80091158 0008E098  80 9D 00 14 */	lwz r4, 0x14(r29)
/* 8009115C 0008E09C  28 03 00 00 */	cmplwi r3, 0
/* 80091160 0008E0A0  40 82 00 0C */	bne lbl_8009116C
/* 80091164 0008E0A4  90 9E 02 F8 */	stw r4, 0x2f8(r30)
/* 80091168 0008E0A8  48 00 00 08 */	b lbl_80091170
lbl_8009116C:
/* 8009116C 0008E0AC  90 83 00 14 */	stw r4, 0x14(r3)
lbl_80091170:
/* 80091170 0008E0B0  28 04 00 00 */	cmplwi r4, 0
/* 80091174 0008E0B4  40 82 00 0C */	bne lbl_80091180
/* 80091178 0008E0B8  90 7E 02 F4 */	stw r3, 0x2f4(r30)
/* 8009117C 0008E0BC  48 00 00 08 */	b lbl_80091184
lbl_80091180:
/* 80091180 0008E0C0  90 64 00 10 */	stw r3, 0x10(r4)
lbl_80091184:
/* 80091184 0008E0C4  38 00 00 00 */	li r0, 0
/* 80091188 0008E0C8  90 1D 00 08 */	stw r0, 8(r29)
/* 8009118C 0008E0CC  80 7E 02 D0 */	lwz r3, 0x2d0(r30)
/* 80091190 0008E0D0  80 1E 02 D4 */	lwz r0, 0x2d4(r30)
/* 80091194 0008E0D4  7C 03 00 00 */	cmpw r3, r0
/* 80091198 0008E0D8  40 80 00 10 */	bge lbl_800911A8
/* 8009119C 0008E0DC  7F C3 F3 78 */	mr r3, r30
/* 800911A0 0008E0E0  48 00 1C 11 */	bl __OSGetEffectivePriority
/* 800911A4 0008E0E4  90 7E 02 D0 */	stw r3, 0x2d0(r30)
lbl_800911A8:
/* 800911A8 0008E0E8  7F A3 EB 78 */	mr r3, r29
/* 800911AC 0008E0EC  48 00 2B 41 */	bl OSWakeupThread
lbl_800911B0:
/* 800911B0 0008E0F0  7F E3 FB 78 */	mr r3, r31
/* 800911B4 0008E0F4  4B FF F0 41 */	bl OSRestoreInterrupts
/* 800911B8 0008E0F8  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800911BC 0008E0FC  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800911C0 0008E100  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800911C4 0008E104  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800911C8 0008E108  38 21 00 20 */	addi r1, r1, 0x20
/* 800911CC 0008E10C  7C 08 03 A6 */	mtlr r0
/* 800911D0 0008E110  4E 80 00 20 */	blr 

.global __OSUnlockAllMutex
__OSUnlockAllMutex:
/* 800911D4 0008E114  7C 08 02 A6 */	mflr r0
/* 800911D8 0008E118  90 01 00 04 */	stw r0, 4(r1)
/* 800911DC 0008E11C  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800911E0 0008E120  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800911E4 0008E124  3B E0 00 00 */	li r31, 0
/* 800911E8 0008E128  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800911EC 0008E12C  3B C3 00 00 */	addi r30, r3, 0
/* 800911F0 0008E130  48 00 00 30 */	b lbl_80091220
lbl_800911F4:
/* 800911F4 0008E134  80 A4 00 10 */	lwz r5, 0x10(r4)
/* 800911F8 0008E138  38 64 00 00 */	addi r3, r4, 0
/* 800911FC 0008E13C  28 05 00 00 */	cmplwi r5, 0
/* 80091200 0008E140  40 82 00 0C */	bne lbl_8009120C
/* 80091204 0008E144  93 FE 02 F8 */	stw r31, 0x2f8(r30)
/* 80091208 0008E148  48 00 00 08 */	b lbl_80091210
lbl_8009120C:
/* 8009120C 0008E14C  93 E5 00 14 */	stw r31, 0x14(r5)
lbl_80091210:
/* 80091210 0008E150  90 BE 02 F4 */	stw r5, 0x2f4(r30)
/* 80091214 0008E154  93 E4 00 0C */	stw r31, 0xc(r4)
/* 80091218 0008E158  93 E4 00 08 */	stw r31, 8(r4)
/* 8009121C 0008E15C  48 00 2A D1 */	bl OSWakeupThread
lbl_80091220:
/* 80091220 0008E160  80 9E 02 F4 */	lwz r4, 0x2f4(r30)
/* 80091224 0008E164  28 04 00 00 */	cmplwi r4, 0
/* 80091228 0008E168  40 82 FF CC */	bne lbl_800911F4
/* 8009122C 0008E16C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 80091230 0008E170  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 80091234 0008E174  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 80091238 0008E178  38 21 00 18 */	addi r1, r1, 0x18
/* 8009123C 0008E17C  7C 08 03 A6 */	mtlr r0
/* 80091240 0008E180  4E 80 00 20 */	blr 

.global OSTryLockMutex
OSTryLockMutex:
/* 80091244 0008E184  7C 08 02 A6 */	mflr r0
/* 80091248 0008E188  90 01 00 04 */	stw r0, 4(r1)
/* 8009124C 0008E18C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 80091250 0008E190  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 80091254 0008E194  93 C1 00 18 */	stw r30, 0x18(r1)
/* 80091258 0008E198  93 A1 00 14 */	stw r29, 0x14(r1)
/* 8009125C 0008E19C  7C 7D 1B 78 */	mr r29, r3
/* 80091260 0008E1A0  4B FF EF 6D */	bl OSDisableInterrupts
/* 80091264 0008E1A4  7C 7F 1B 78 */	mr r31, r3
/* 80091268 0008E1A8  48 00 1A 21 */	bl OSGetCurrentThread
/* 8009126C 0008E1AC  80 1D 00 08 */	lwz r0, 8(r29)
/* 80091270 0008E1B0  28 00 00 00 */	cmplwi r0, 0
/* 80091274 0008E1B4  40 82 00 44 */	bne lbl_800912B8
/* 80091278 0008E1B8  90 7D 00 08 */	stw r3, 8(r29)
/* 8009127C 0008E1BC  80 9D 00 0C */	lwz r4, 0xc(r29)
/* 80091280 0008E1C0  38 04 00 01 */	addi r0, r4, 1
/* 80091284 0008E1C4  90 1D 00 0C */	stw r0, 0xc(r29)
/* 80091288 0008E1C8  80 83 02 F8 */	lwz r4, 0x2f8(r3)
/* 8009128C 0008E1CC  28 04 00 00 */	cmplwi r4, 0
/* 80091290 0008E1D0  40 82 00 0C */	bne lbl_8009129C
/* 80091294 0008E1D4  93 A3 02 F4 */	stw r29, 0x2f4(r3)
/* 80091298 0008E1D8  48 00 00 08 */	b lbl_800912A0
lbl_8009129C:
/* 8009129C 0008E1DC  93 A4 00 10 */	stw r29, 0x10(r4)
lbl_800912A0:
/* 800912A0 0008E1E0  90 9D 00 14 */	stw r4, 0x14(r29)
/* 800912A4 0008E1E4  38 00 00 00 */	li r0, 0
/* 800912A8 0008E1E8  3B C0 00 01 */	li r30, 1
/* 800912AC 0008E1EC  90 1D 00 10 */	stw r0, 0x10(r29)
/* 800912B0 0008E1F0  93 A3 02 F8 */	stw r29, 0x2f8(r3)
/* 800912B4 0008E1F4  48 00 00 24 */	b lbl_800912D8
lbl_800912B8:
/* 800912B8 0008E1F8  7C 00 18 40 */	cmplw r0, r3
/* 800912BC 0008E1FC  40 82 00 18 */	bne lbl_800912D4
/* 800912C0 0008E200  80 7D 00 0C */	lwz r3, 0xc(r29)
/* 800912C4 0008E204  3B C0 00 01 */	li r30, 1
/* 800912C8 0008E208  38 03 00 01 */	addi r0, r3, 1
/* 800912CC 0008E20C  90 1D 00 0C */	stw r0, 0xc(r29)
/* 800912D0 0008E210  48 00 00 08 */	b lbl_800912D8
lbl_800912D4:
/* 800912D4 0008E214  3B C0 00 00 */	li r30, 0
lbl_800912D8:
/* 800912D8 0008E218  7F E3 FB 78 */	mr r3, r31
/* 800912DC 0008E21C  4B FF EF 19 */	bl OSRestoreInterrupts
/* 800912E0 0008E220  7F C3 F3 78 */	mr r3, r30
/* 800912E4 0008E224  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800912E8 0008E228  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800912EC 0008E22C  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800912F0 0008E230  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800912F4 0008E234  38 21 00 20 */	addi r1, r1, 0x20
/* 800912F8 0008E238  7C 08 03 A6 */	mtlr r0
/* 800912FC 0008E23C  4E 80 00 20 */	blr 

.global OSInitCond
OSInitCond:
/* 80091300 0008E240  7C 08 02 A6 */	mflr r0
/* 80091304 0008E244  90 01 00 04 */	stw r0, 4(r1)
/* 80091308 0008E248  94 21 FF F8 */	stwu r1, -8(r1)
/* 8009130C 0008E24C  48 00 19 6D */	bl OSInitThreadQueue
/* 80091310 0008E250  80 01 00 0C */	lwz r0, 0xc(r1)
/* 80091314 0008E254  38 21 00 08 */	addi r1, r1, 8
/* 80091318 0008E258  7C 08 03 A6 */	mtlr r0
/* 8009131C 0008E25C  4E 80 00 20 */	blr 

.global OSWaitCond
OSWaitCond:
/* 80091320 0008E260  7C 08 02 A6 */	mflr r0
/* 80091324 0008E264  90 01 00 04 */	stw r0, 4(r1)
/* 80091328 0008E268  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 8009132C 0008E26C  BF 61 00 14 */	stmw r27, 0x14(r1)
/* 80091330 0008E270  3B 63 00 00 */	addi r27, r3, 0
/* 80091334 0008E274  3B 84 00 00 */	addi r28, r4, 0
/* 80091338 0008E278  4B FF EE 95 */	bl OSDisableInterrupts
/* 8009133C 0008E27C  7C 7F 1B 78 */	mr r31, r3
/* 80091340 0008E280  48 00 19 49 */	bl OSGetCurrentThread
/* 80091344 0008E284  80 1C 00 08 */	lwz r0, 8(r28)
/* 80091348 0008E288  3B C3 00 00 */	addi r30, r3, 0
/* 8009134C 0008E28C  7C 00 F0 40 */	cmplw r0, r30
/* 80091350 0008E290  40 82 00 88 */	bne lbl_800913D8
/* 80091354 0008E294  83 BC 00 0C */	lwz r29, 0xc(r28)
/* 80091358 0008E298  38 00 00 00 */	li r0, 0
/* 8009135C 0008E29C  90 1C 00 0C */	stw r0, 0xc(r28)
/* 80091360 0008E2A0  80 7C 00 10 */	lwz r3, 0x10(r28)
/* 80091364 0008E2A4  80 9C 00 14 */	lwz r4, 0x14(r28)
/* 80091368 0008E2A8  28 03 00 00 */	cmplwi r3, 0
/* 8009136C 0008E2AC  40 82 00 0C */	bne lbl_80091378
/* 80091370 0008E2B0  90 9E 02 F8 */	stw r4, 0x2f8(r30)
/* 80091374 0008E2B4  48 00 00 08 */	b lbl_8009137C
lbl_80091378:
/* 80091378 0008E2B8  90 83 00 14 */	stw r4, 0x14(r3)
lbl_8009137C:
/* 8009137C 0008E2BC  28 04 00 00 */	cmplwi r4, 0
/* 80091380 0008E2C0  40 82 00 0C */	bne lbl_8009138C
/* 80091384 0008E2C4  90 7E 02 F4 */	stw r3, 0x2f4(r30)
/* 80091388 0008E2C8  48 00 00 08 */	b lbl_80091390
lbl_8009138C:
/* 8009138C 0008E2CC  90 64 00 10 */	stw r3, 0x10(r4)
lbl_80091390:
/* 80091390 0008E2D0  38 00 00 00 */	li r0, 0
/* 80091394 0008E2D4  90 1C 00 08 */	stw r0, 8(r28)
/* 80091398 0008E2D8  80 7E 02 D0 */	lwz r3, 0x2d0(r30)
/* 8009139C 0008E2DC  80 1E 02 D4 */	lwz r0, 0x2d4(r30)
/* 800913A0 0008E2E0  7C 03 00 00 */	cmpw r3, r0
/* 800913A4 0008E2E4  40 80 00 10 */	bge lbl_800913B4
/* 800913A8 0008E2E8  7F C3 F3 78 */	mr r3, r30
/* 800913AC 0008E2EC  48 00 1A 05 */	bl __OSGetEffectivePriority
/* 800913B0 0008E2F0  90 7E 02 D0 */	stw r3, 0x2d0(r30)
lbl_800913B4:
/* 800913B4 0008E2F4  48 00 19 15 */	bl OSDisableScheduler
/* 800913B8 0008E2F8  7F 83 E3 78 */	mr r3, r28
/* 800913BC 0008E2FC  48 00 29 31 */	bl OSWakeupThread
/* 800913C0 0008E300  48 00 19 49 */	bl OSEnableScheduler
/* 800913C4 0008E304  7F 63 DB 78 */	mr r3, r27
/* 800913C8 0008E308  48 00 28 39 */	bl OSSleepThread
/* 800913CC 0008E30C  7F 83 E3 78 */	mr r3, r28
/* 800913D0 0008E310  4B FF FC 61 */	bl OSLockMutex
/* 800913D4 0008E314  93 BC 00 0C */	stw r29, 0xc(r28)
lbl_800913D8:
/* 800913D8 0008E318  7F E3 FB 78 */	mr r3, r31
/* 800913DC 0008E31C  4B FF EE 19 */	bl OSRestoreInterrupts
/* 800913E0 0008E320  BB 61 00 14 */	lmw r27, 0x14(r1)
/* 800913E4 0008E324  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800913E8 0008E328  38 21 00 28 */	addi r1, r1, 0x28
/* 800913EC 0008E32C  7C 08 03 A6 */	mtlr r0
/* 800913F0 0008E330  4E 80 00 20 */	blr 

.global OSSignalCond
OSSignalCond:
/* 800913F4 0008E334  7C 08 02 A6 */	mflr r0
/* 800913F8 0008E338  90 01 00 04 */	stw r0, 4(r1)
/* 800913FC 0008E33C  94 21 FF F8 */	stwu r1, -8(r1)
/* 80091400 0008E340  48 00 28 ED */	bl OSWakeupThread
/* 80091404 0008E344  80 01 00 0C */	lwz r0, 0xc(r1)
/* 80091408 0008E348  38 21 00 08 */	addi r1, r1, 8
/* 8009140C 0008E34C  7C 08 03 A6 */	mtlr r0
/* 80091410 0008E350  4E 80 00 20 */	blr 
