.include "macros.inc"

.section .text, "ax"  # 0x80005600 - 0x8036FBA0
.global OSInitMessageQueue
OSInitMessageQueue:
/* 80090A50 0008D990  7C 08 02 A6 */	mflr r0
/* 80090A54 0008D994  90 01 00 04 */	stw r0, 4(r1)
/* 80090A58 0008D998  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 80090A5C 0008D99C  93 E1 00 24 */	stw r31, 0x24(r1)
/* 80090A60 0008D9A0  3B E5 00 00 */	addi r31, r5, 0
/* 80090A64 0008D9A4  93 C1 00 20 */	stw r30, 0x20(r1)
/* 80090A68 0008D9A8  3B C4 00 00 */	addi r30, r4, 0
/* 80090A6C 0008D9AC  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 80090A70 0008D9B0  3B A3 00 00 */	addi r29, r3, 0
/* 80090A74 0008D9B4  48 00 22 05 */	bl OSInitThreadQueue
/* 80090A78 0008D9B8  38 7D 00 08 */	addi r3, r29, 8
/* 80090A7C 0008D9BC  48 00 21 FD */	bl OSInitThreadQueue
/* 80090A80 0008D9C0  93 DD 00 10 */	stw r30, 0x10(r29)
/* 80090A84 0008D9C4  38 00 00 00 */	li r0, 0
/* 80090A88 0008D9C8  93 FD 00 14 */	stw r31, 0x14(r29)
/* 80090A8C 0008D9CC  90 1D 00 18 */	stw r0, 0x18(r29)
/* 80090A90 0008D9D0  90 1D 00 1C */	stw r0, 0x1c(r29)
/* 80090A94 0008D9D4  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 80090A98 0008D9D8  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 80090A9C 0008D9DC  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 80090AA0 0008D9E0  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 80090AA4 0008D9E4  38 21 00 28 */	addi r1, r1, 0x28
/* 80090AA8 0008D9E8  7C 08 03 A6 */	mtlr r0
/* 80090AAC 0008D9EC  4E 80 00 20 */	blr 

.global OSSendMessage
OSSendMessage:
/* 80090AB0 0008D9F0  7C 08 02 A6 */	mflr r0
/* 80090AB4 0008D9F4  90 01 00 04 */	stw r0, 4(r1)
/* 80090AB8 0008D9F8  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 80090ABC 0008D9FC  93 E1 00 24 */	stw r31, 0x24(r1)
/* 80090AC0 0008DA00  3B E5 00 00 */	addi r31, r5, 0
/* 80090AC4 0008DA04  93 C1 00 20 */	stw r30, 0x20(r1)
/* 80090AC8 0008DA08  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 80090ACC 0008DA0C  3B A4 00 00 */	addi r29, r4, 0
/* 80090AD0 0008DA10  93 81 00 18 */	stw r28, 0x18(r1)
/* 80090AD4 0008DA14  3B 83 00 00 */	addi r28, r3, 0
/* 80090AD8 0008DA18  4B FF F6 F5 */	bl OSDisableInterrupts
/* 80090ADC 0008DA1C  3B C3 00 00 */	addi r30, r3, 0
/* 80090AE0 0008DA20  57 FF 07 FE */	clrlwi r31, r31, 0x1f
/* 80090AE4 0008DA24  48 00 00 24 */	b lbl_80090B08
lbl_80090AE8:
/* 80090AE8 0008DA28  2C 1F 00 00 */	cmpwi r31, 0
/* 80090AEC 0008DA2C  40 82 00 14 */	bne lbl_80090B00
/* 80090AF0 0008DA30  7F C3 F3 78 */	mr r3, r30
/* 80090AF4 0008DA34  4B FF F7 01 */	bl OSRestoreInterrupts
/* 80090AF8 0008DA38  38 60 00 00 */	li r3, 0
/* 80090AFC 0008DA3C  48 00 00 5C */	b lbl_80090B58
lbl_80090B00:
/* 80090B00 0008DA40  7F 83 E3 78 */	mr r3, r28
/* 80090B04 0008DA44  48 00 30 FD */	bl OSSleepThread
lbl_80090B08:
/* 80090B08 0008DA48  80 DC 00 14 */	lwz r6, 0x14(r28)
/* 80090B0C 0008DA4C  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 80090B10 0008DA50  7C 06 20 00 */	cmpw r6, r4
/* 80090B14 0008DA54  40 81 FF D4 */	ble lbl_80090AE8
/* 80090B18 0008DA58  80 1C 00 18 */	lwz r0, 0x18(r28)
/* 80090B1C 0008DA5C  38 7C 00 08 */	addi r3, r28, 8
/* 80090B20 0008DA60  80 BC 00 10 */	lwz r5, 0x10(r28)
/* 80090B24 0008DA64  7C 80 22 14 */	add r4, r0, r4
/* 80090B28 0008DA68  7C 04 33 D6 */	divw r0, r4, r6
/* 80090B2C 0008DA6C  7C 00 31 D6 */	mullw r0, r0, r6
/* 80090B30 0008DA70  7C 00 20 50 */	subf r0, r0, r4
/* 80090B34 0008DA74  54 00 10 3A */	slwi r0, r0, 2
/* 80090B38 0008DA78  7F A5 01 2E */	stwx r29, r5, r0
/* 80090B3C 0008DA7C  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 80090B40 0008DA80  38 04 00 01 */	addi r0, r4, 1
/* 80090B44 0008DA84  90 1C 00 1C */	stw r0, 0x1c(r28)
/* 80090B48 0008DA88  48 00 31 A5 */	bl OSWakeupThread
/* 80090B4C 0008DA8C  7F C3 F3 78 */	mr r3, r30
/* 80090B50 0008DA90  4B FF F6 A5 */	bl OSRestoreInterrupts
/* 80090B54 0008DA94  38 60 00 01 */	li r3, 1
lbl_80090B58:
/* 80090B58 0008DA98  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 80090B5C 0008DA9C  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 80090B60 0008DAA0  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 80090B64 0008DAA4  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 80090B68 0008DAA8  83 81 00 18 */	lwz r28, 0x18(r1)
/* 80090B6C 0008DAAC  38 21 00 28 */	addi r1, r1, 0x28
/* 80090B70 0008DAB0  7C 08 03 A6 */	mtlr r0
/* 80090B74 0008DAB4  4E 80 00 20 */	blr 

.global OSReceiveMessage
OSReceiveMessage:
/* 80090B78 0008DAB8  7C 08 02 A6 */	mflr r0
/* 80090B7C 0008DABC  90 01 00 04 */	stw r0, 4(r1)
/* 80090B80 0008DAC0  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 80090B84 0008DAC4  93 E1 00 24 */	stw r31, 0x24(r1)
/* 80090B88 0008DAC8  3B E3 00 00 */	addi r31, r3, 0
/* 80090B8C 0008DACC  93 C1 00 20 */	stw r30, 0x20(r1)
/* 80090B90 0008DAD0  3B C5 00 00 */	addi r30, r5, 0
/* 80090B94 0008DAD4  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 80090B98 0008DAD8  93 81 00 18 */	stw r28, 0x18(r1)
/* 80090B9C 0008DADC  3B 84 00 00 */	addi r28, r4, 0
/* 80090BA0 0008DAE0  4B FF F6 2D */	bl OSDisableInterrupts
/* 80090BA4 0008DAE4  3B A3 00 00 */	addi r29, r3, 0
/* 80090BA8 0008DAE8  57 DE 07 FE */	clrlwi r30, r30, 0x1f
/* 80090BAC 0008DAEC  48 00 00 24 */	b lbl_80090BD0
lbl_80090BB0:
/* 80090BB0 0008DAF0  2C 1E 00 00 */	cmpwi r30, 0
/* 80090BB4 0008DAF4  40 82 00 14 */	bne lbl_80090BC8
/* 80090BB8 0008DAF8  7F A3 EB 78 */	mr r3, r29
/* 80090BBC 0008DAFC  4B FF F6 39 */	bl OSRestoreInterrupts
/* 80090BC0 0008DB00  38 60 00 00 */	li r3, 0
/* 80090BC4 0008DB04  48 00 00 70 */	b lbl_80090C34
lbl_80090BC8:
/* 80090BC8 0008DB08  38 7F 00 08 */	addi r3, r31, 8
/* 80090BCC 0008DB0C  48 00 30 35 */	bl OSSleepThread
lbl_80090BD0:
/* 80090BD0 0008DB10  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 80090BD4 0008DB14  2C 00 00 00 */	cmpwi r0, 0
/* 80090BD8 0008DB18  41 82 FF D8 */	beq lbl_80090BB0
/* 80090BDC 0008DB1C  28 1C 00 00 */	cmplwi r28, 0
/* 80090BE0 0008DB20  41 82 00 18 */	beq lbl_80090BF8
/* 80090BE4 0008DB24  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 80090BE8 0008DB28  80 7F 00 10 */	lwz r3, 0x10(r31)
/* 80090BEC 0008DB2C  54 00 10 3A */	slwi r0, r0, 2
/* 80090BF0 0008DB30  7C 03 00 2E */	lwzx r0, r3, r0
/* 80090BF4 0008DB34  90 1C 00 00 */	stw r0, 0(r28)
lbl_80090BF8:
/* 80090BF8 0008DB38  80 BF 00 18 */	lwz r5, 0x18(r31)
/* 80090BFC 0008DB3C  7F E3 FB 78 */	mr r3, r31
/* 80090C00 0008DB40  80 9F 00 14 */	lwz r4, 0x14(r31)
/* 80090C04 0008DB44  38 A5 00 01 */	addi r5, r5, 1
/* 80090C08 0008DB48  7C 05 23 D6 */	divw r0, r5, r4
/* 80090C0C 0008DB4C  7C 00 21 D6 */	mullw r0, r0, r4
/* 80090C10 0008DB50  7C 00 28 50 */	subf r0, r0, r5
/* 80090C14 0008DB54  90 1F 00 18 */	stw r0, 0x18(r31)
/* 80090C18 0008DB58  80 9F 00 1C */	lwz r4, 0x1c(r31)
/* 80090C1C 0008DB5C  38 04 FF FF */	addi r0, r4, -1
/* 80090C20 0008DB60  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 80090C24 0008DB64  48 00 30 C9 */	bl OSWakeupThread
/* 80090C28 0008DB68  7F A3 EB 78 */	mr r3, r29
/* 80090C2C 0008DB6C  4B FF F5 C9 */	bl OSRestoreInterrupts
/* 80090C30 0008DB70  38 60 00 01 */	li r3, 1
lbl_80090C34:
/* 80090C34 0008DB74  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 80090C38 0008DB78  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 80090C3C 0008DB7C  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 80090C40 0008DB80  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 80090C44 0008DB84  83 81 00 18 */	lwz r28, 0x18(r1)
/* 80090C48 0008DB88  38 21 00 28 */	addi r1, r1, 0x28
/* 80090C4C 0008DB8C  7C 08 03 A6 */	mtlr r0
/* 80090C50 0008DB90  4E 80 00 20 */	blr 
