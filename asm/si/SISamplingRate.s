.include "macros.inc"

.section .text, "ax"  # 0x80005600 - 0x8036FBA0
.global SISetSamplingRate
SISetSamplingRate:
/* 800B4318 000B1258  7C 08 02 A6 */	mflr r0
/* 800B431C 000B125C  90 01 00 04 */	stw r0, 4(r1)
/* 800B4320 000B1260  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800B4324 000B1264  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800B4328 000B1268  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800B432C 000B126C  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800B4330 000B1270  3B A3 00 00 */	addi r29, r3, 0
/* 800B4334 000B1274  28 1D 00 0B */	cmplwi r29, 0xb
/* 800B4338 000B1278  3C 60 80 3B */	lis r3, XYNTSC@ha
/* 800B433C 000B127C  3B E3 1D D8 */	addi r31, r3, XYNTSC@l
/* 800B4340 000B1280  40 81 00 08 */	ble lbl_800B4348
/* 800B4344 000B1284  3B A0 00 0B */	li r29, 0xb
lbl_800B4348:
/* 800B4348 000B1288  4B FD BE 85 */	bl OSDisableInterrupts
/* 800B434C 000B128C  93 AD 95 D0 */	stw r29, SamplingRate-_SDA_BASE_(r13)
/* 800B4350 000B1290  7C 7E 1B 78 */	mr r30, r3
/* 800B4354 000B1294  4B FE 6C 69 */	bl VIGetTvFormat
/* 800B4358 000B1298  2C 03 00 02 */	cmpwi r3, 2
/* 800B435C 000B129C  41 82 00 24 */	beq lbl_800B4380
/* 800B4360 000B12A0  40 80 00 14 */	bge lbl_800B4374
/* 800B4364 000B12A4  2C 03 00 00 */	cmpwi r3, 0
/* 800B4368 000B12A8  41 82 00 18 */	beq lbl_800B4380
/* 800B436C 000B12AC  40 80 00 1C */	bge lbl_800B4388
/* 800B4370 000B12B0  48 00 00 20 */	b lbl_800B4390
lbl_800B4374:
/* 800B4374 000B12B4  2C 03 00 05 */	cmpwi r3, 5
/* 800B4378 000B12B8  41 82 00 08 */	beq lbl_800B4380
/* 800B437C 000B12BC  48 00 00 14 */	b lbl_800B4390
lbl_800B4380:
/* 800B4380 000B12C0  7F E4 FB 78 */	mr r4, r31
/* 800B4384 000B12C4  48 00 00 20 */	b lbl_800B43A4
lbl_800B4388:
/* 800B4388 000B12C8  38 9F 00 30 */	addi r4, r31, 0x30
/* 800B438C 000B12CC  48 00 00 18 */	b lbl_800B43A4
lbl_800B4390:
/* 800B4390 000B12D0  38 7F 00 60 */	addi r3, r31, 0x60
/* 800B4394 000B12D4  4C C6 31 82 */	crclr 6
/* 800B4398 000B12D8  4B FD AB CD */	bl OSReport
/* 800B439C 000B12DC  3B A0 00 00 */	li r29, 0
/* 800B43A0 000B12E0  38 9F 00 00 */	addi r4, r31, 0
lbl_800B43A4:
/* 800B43A4 000B12E4  3C 60 CC 00 */	lis r3, 0xCC00206C@ha
/* 800B43A8 000B12E8  A0 03 20 6C */	lhz r0, 0xCC00206C@l(r3)
/* 800B43AC 000B12EC  54 00 07 FF */	clrlwi. r0, r0, 0x1f
/* 800B43B0 000B12F0  41 82 00 0C */	beq lbl_800B43BC
/* 800B43B4 000B12F4  38 A0 00 02 */	li r5, 2
/* 800B43B8 000B12F8  48 00 00 08 */	b lbl_800B43C0
lbl_800B43BC:
/* 800B43BC 000B12FC  38 A0 00 01 */	li r5, 1
lbl_800B43C0:
/* 800B43C0 000B1300  57 A3 10 3A */	slwi r3, r29, 2
/* 800B43C4 000B1304  7C 04 1A 2E */	lhzx r0, r4, r3
/* 800B43C8 000B1308  7C 64 1A 14 */	add r3, r4, r3
/* 800B43CC 000B130C  88 83 00 02 */	lbz r4, 2(r3)
/* 800B43D0 000B1310  7C 65 01 D6 */	mullw r3, r5, r0
/* 800B43D4 000B1314  4B FF F4 A9 */	bl SISetXY
/* 800B43D8 000B1318  7F C3 F3 78 */	mr r3, r30
/* 800B43DC 000B131C  4B FD BE 19 */	bl OSRestoreInterrupts
/* 800B43E0 000B1320  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800B43E4 000B1324  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800B43E8 000B1328  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800B43EC 000B132C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800B43F0 000B1330  38 21 00 20 */	addi r1, r1, 0x20
/* 800B43F4 000B1334  7C 08 03 A6 */	mtlr r0
/* 800B43F8 000B1338  4E 80 00 20 */	blr 

.global SIRefreshSamplingRate
SIRefreshSamplingRate:
/* 800B43FC 000B133C  7C 08 02 A6 */	mflr r0
/* 800B4400 000B1340  90 01 00 04 */	stw r0, 4(r1)
/* 800B4404 000B1344  94 21 FF F8 */	stwu r1, -8(r1)
/* 800B4408 000B1348  80 6D 95 D0 */	lwz r3, SamplingRate-_SDA_BASE_(r13)
/* 800B440C 000B134C  4B FF FF 0D */	bl SISetSamplingRate
/* 800B4410 000B1350  80 01 00 0C */	lwz r0, 0xc(r1)
/* 800B4414 000B1354  38 21 00 08 */	addi r1, r1, 8
/* 800B4418 000B1358  7C 08 03 A6 */	mtlr r0
/* 800B441C 000B135C  4E 80 00 20 */	blr 

.section .data, "wa"  # 0x803A8380 - 0x803E6000
XYNTSC:
	.incbin "baserom.dol", 0x3AEDD8, 0x30
XYPAL:
	.incbin "baserom.dol", 0x3AEE08, 0x30
$$216:
	.incbin "baserom.dol", 0x3AEE38, 0x38

.section .sbss, "wa"  # 0x804097C0 - 0x8040B45C
SamplingRate:
	.skip 0x8
