.include "macros.inc"

.section .text, "ax"  # 0x80005600 - 0x8036FBA0
.global SetExiInterruptMask
SetExiInterruptMask:
/* 800B4420 000B1360  7C 08 02 A6 */	mflr r0
/* 800B4424 000B1364  3C A0 80 3F */	lis r5, Ecb@ha
/* 800B4428 000B1368  90 01 00 04 */	stw r0, 4(r1)
/* 800B442C 000B136C  2C 03 00 01 */	cmpwi r3, 1
/* 800B4430 000B1370  38 A5 CB A0 */	addi r5, r5, Ecb@l
/* 800B4434 000B1374  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800B4438 000B1378  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800B443C 000B137C  3B E4 00 00 */	addi r31, r4, 0
/* 800B4440 000B1380  38 85 00 80 */	addi r4, r5, 0x80
/* 800B4444 000B1384  41 82 00 5C */	beq lbl_800B44A0
/* 800B4448 000B1388  40 80 00 10 */	bge lbl_800B4458
/* 800B444C 000B138C  2C 03 00 00 */	cmpwi r3, 0
/* 800B4450 000B1390  40 80 00 14 */	bge lbl_800B4464
/* 800B4454 000B1394  48 00 00 AC */	b lbl_800B4500
lbl_800B4458:
/* 800B4458 000B1398  2C 03 00 03 */	cmpwi r3, 3
/* 800B445C 000B139C  40 80 00 A4 */	bge lbl_800B4500
/* 800B4460 000B13A0  48 00 00 70 */	b lbl_800B44D0
lbl_800B4464:
/* 800B4464 000B13A4  80 1F 00 00 */	lwz r0, 0(r31)
/* 800B4468 000B13A8  28 00 00 00 */	cmplwi r0, 0
/* 800B446C 000B13AC  40 82 00 10 */	bne lbl_800B447C
/* 800B4470 000B13B0  80 04 00 00 */	lwz r0, 0(r4)
/* 800B4474 000B13B4  28 00 00 00 */	cmplwi r0, 0
/* 800B4478 000B13B8  41 82 00 10 */	beq lbl_800B4488
lbl_800B447C:
/* 800B447C 000B13BC  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B4480 000B13C0  54 00 06 F7 */	rlwinm. r0, r0, 0, 0x1b, 0x1b
/* 800B4484 000B13C4  41 82 00 10 */	beq lbl_800B4494
lbl_800B4488:
/* 800B4488 000B13C8  3C 60 00 41 */	lis r3, 0x41
/* 800B448C 000B13CC  4B FD C1 09 */	bl __OSMaskInterrupts
/* 800B4490 000B13D0  48 00 00 70 */	b lbl_800B4500
lbl_800B4494:
/* 800B4494 000B13D4  3C 60 00 41 */	lis r3, 0x41
/* 800B4498 000B13D8  4B FD C1 85 */	bl __OSUnmaskInterrupts
/* 800B449C 000B13DC  48 00 00 64 */	b lbl_800B4500
lbl_800B44A0:
/* 800B44A0 000B13E0  80 1F 00 00 */	lwz r0, 0(r31)
/* 800B44A4 000B13E4  28 00 00 00 */	cmplwi r0, 0
/* 800B44A8 000B13E8  41 82 00 10 */	beq lbl_800B44B8
/* 800B44AC 000B13EC  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B44B0 000B13F0  54 00 06 F7 */	rlwinm. r0, r0, 0, 0x1b, 0x1b
/* 800B44B4 000B13F4  41 82 00 10 */	beq lbl_800B44C4
lbl_800B44B8:
/* 800B44B8 000B13F8  3C 60 00 08 */	lis r3, 8
/* 800B44BC 000B13FC  4B FD C0 D9 */	bl __OSMaskInterrupts
/* 800B44C0 000B1400  48 00 00 40 */	b lbl_800B4500
lbl_800B44C4:
/* 800B44C4 000B1404  3C 60 00 08 */	lis r3, 8
/* 800B44C8 000B1408  4B FD C1 55 */	bl __OSUnmaskInterrupts
/* 800B44CC 000B140C  48 00 00 34 */	b lbl_800B4500
lbl_800B44D0:
/* 800B44D0 000B1410  38 60 00 19 */	li r3, 0x19
/* 800B44D4 000B1414  4B FD BD 61 */	bl __OSGetInterruptHandler
/* 800B44D8 000B1418  28 03 00 00 */	cmplwi r3, 0
/* 800B44DC 000B141C  41 82 00 10 */	beq lbl_800B44EC
/* 800B44E0 000B1420  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B44E4 000B1424  54 00 06 F7 */	rlwinm. r0, r0, 0, 0x1b, 0x1b
/* 800B44E8 000B1428  41 82 00 10 */	beq lbl_800B44F8
lbl_800B44EC:
/* 800B44EC 000B142C  38 60 00 40 */	li r3, 0x40
/* 800B44F0 000B1430  4B FD C0 A5 */	bl __OSMaskInterrupts
/* 800B44F4 000B1434  48 00 00 0C */	b lbl_800B4500
lbl_800B44F8:
/* 800B44F8 000B1438  38 60 00 40 */	li r3, 0x40
/* 800B44FC 000B143C  4B FD C1 21 */	bl __OSUnmaskInterrupts
lbl_800B4500:
/* 800B4500 000B1440  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800B4504 000B1444  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800B4508 000B1448  38 21 00 18 */	addi r1, r1, 0x18
/* 800B450C 000B144C  7C 08 03 A6 */	mtlr r0
/* 800B4510 000B1450  4E 80 00 20 */	blr 

.global EXIImm
EXIImm:
/* 800B4514 000B1454  7C 08 02 A6 */	mflr r0
/* 800B4518 000B1458  90 01 00 04 */	stw r0, 4(r1)
/* 800B451C 000B145C  94 21 FF A8 */	stwu r1, -0x58(r1)
/* 800B4520 000B1460  BE 61 00 24 */	stmw r19, 0x24(r1)
/* 800B4524 000B1464  3B 83 00 00 */	addi r28, r3, 0
/* 800B4528 000B1468  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B452C 000B146C  57 88 30 32 */	slwi r8, r28, 6
/* 800B4530 000B1470  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B4534 000B1474  3B A4 00 00 */	addi r29, r4, 0
/* 800B4538 000B1478  3B C5 00 00 */	addi r30, r5, 0
/* 800B453C 000B147C  3B E6 00 00 */	addi r31, r6, 0
/* 800B4540 000B1480  3A 67 00 00 */	addi r19, r7, 0
/* 800B4544 000B1484  7F 60 42 14 */	add r27, r0, r8
/* 800B4548 000B1488  4B FD BC 85 */	bl OSDisableInterrupts
/* 800B454C 000B148C  80 1B 00 0C */	lwz r0, 0xc(r27)
/* 800B4550 000B1490  3B 43 00 00 */	addi r26, r3, 0
/* 800B4554 000B1494  54 00 07 BF */	clrlwi. r0, r0, 0x1e
/* 800B4558 000B1498  40 82 00 10 */	bne lbl_800B4568
/* 800B455C 000B149C  80 1B 00 0C */	lwz r0, 0xc(r27)
/* 800B4560 000B14A0  54 00 07 7B */	rlwinm. r0, r0, 0, 0x1d, 0x1d
/* 800B4564 000B14A4  40 82 00 14 */	bne lbl_800B4578
lbl_800B4568:
/* 800B4568 000B14A8  7F 43 D3 78 */	mr r3, r26
/* 800B456C 000B14AC  4B FD BC 89 */	bl OSRestoreInterrupts
/* 800B4570 000B14B0  38 60 00 00 */	li r3, 0
/* 800B4574 000B14B4  48 00 01 E8 */	b lbl_800B475C
lbl_800B4578:
/* 800B4578 000B14B8  92 7B 00 04 */	stw r19, 4(r27)
/* 800B457C 000B14BC  80 1B 00 04 */	lwz r0, 4(r27)
/* 800B4580 000B14C0  28 00 00 00 */	cmplwi r0, 0
/* 800B4584 000B14C4  41 82 00 28 */	beq lbl_800B45AC
/* 800B4588 000B14C8  38 7C 00 00 */	addi r3, r28, 0
/* 800B458C 000B14CC  38 80 00 00 */	li r4, 0
/* 800B4590 000B14D0  38 A0 00 01 */	li r5, 1
/* 800B4594 000B14D4  38 C0 00 00 */	li r6, 0
/* 800B4598 000B14D8  48 00 05 9D */	bl EXIClearInterrupts
/* 800B459C 000B14DC  1C 1C 00 03 */	mulli r0, r28, 3
/* 800B45A0 000B14E0  3C 60 00 20 */	lis r3, 0x20
/* 800B45A4 000B14E4  7C 63 04 30 */	srw r3, r3, r0
/* 800B45A8 000B14E8  4B FD C0 75 */	bl __OSUnmaskInterrupts
lbl_800B45AC:
/* 800B45AC 000B14EC  80 1B 00 0C */	lwz r0, 0xc(r27)
/* 800B45B0 000B14F0  28 1F 00 00 */	cmplwi r31, 0
/* 800B45B4 000B14F4  60 00 00 02 */	ori r0, r0, 2
/* 800B45B8 000B14F8  90 1B 00 0C */	stw r0, 0xc(r27)
/* 800B45BC 000B14FC  41 82 01 44 */	beq lbl_800B4700
/* 800B45C0 000B1500  3B 00 00 00 */	li r24, 0
/* 800B45C4 000B1504  7C 18 F0 00 */	cmpw r24, r30
/* 800B45C8 000B1508  3B 20 00 00 */	li r25, 0
/* 800B45CC 000B150C  40 80 01 20 */	bge lbl_800B46EC
/* 800B45D0 000B1510  2C 1E 00 08 */	cmpwi r30, 8
/* 800B45D4 000B1514  38 7E FF F8 */	addi r3, r30, -8
/* 800B45D8 000B1518  40 81 01 7C */	ble lbl_800B4754
/* 800B45DC 000B151C  38 03 00 07 */	addi r0, r3, 7
/* 800B45E0 000B1520  54 00 E8 FE */	srwi r0, r0, 3
/* 800B45E4 000B1524  2C 03 00 00 */	cmpwi r3, 0
/* 800B45E8 000B1528  7C 09 03 A6 */	mtctr r0
/* 800B45EC 000B152C  39 9D 00 00 */	addi r12, r29, 0
/* 800B45F0 000B1530  40 81 01 64 */	ble lbl_800B4754
lbl_800B45F4:
/* 800B45F4 000B1534  20 78 00 03 */	subfic r3, r24, 3
/* 800B45F8 000B1538  89 2C 00 00 */	lbz r9, 0(r12)
/* 800B45FC 000B153C  38 18 00 01 */	addi r0, r24, 1
/* 800B4600 000B1540  89 4C 00 01 */	lbz r10, 1(r12)
/* 800B4604 000B1544  54 67 18 38 */	slwi r7, r3, 3
/* 800B4608 000B1548  89 0C 00 02 */	lbz r8, 2(r12)
/* 800B460C 000B154C  20 A0 00 03 */	subfic r5, r0, 3
/* 800B4610 000B1550  88 CC 00 03 */	lbz r6, 3(r12)
/* 800B4614 000B1554  38 78 00 02 */	addi r3, r24, 2
/* 800B4618 000B1558  88 8C 00 04 */	lbz r4, 4(r12)
/* 800B461C 000B155C  7D 2B 38 30 */	slw r11, r9, r7
/* 800B4620 000B1560  88 0C 00 05 */	lbz r0, 5(r12)
/* 800B4624 000B1564  54 A9 18 38 */	slwi r9, r5, 3
/* 800B4628 000B1568  8A 8C 00 06 */	lbz r20, 6(r12)
/* 800B462C 000B156C  20 63 00 03 */	subfic r3, r3, 3
/* 800B4630 000B1570  8A CC 00 07 */	lbz r22, 7(r12)
/* 800B4634 000B1574  54 67 18 38 */	slwi r7, r3, 3
/* 800B4638 000B1578  7C B8 00 D0 */	neg r5, r24
/* 800B463C 000B157C  38 78 00 04 */	addi r3, r24, 4
/* 800B4640 000B1580  54 A5 18 38 */	slwi r5, r5, 3
/* 800B4644 000B1584  20 63 00 03 */	subfic r3, r3, 3
/* 800B4648 000B1588  3A 78 00 05 */	addi r19, r24, 5
/* 800B464C 000B158C  54 63 18 38 */	slwi r3, r3, 3
/* 800B4650 000B1590  22 73 00 03 */	subfic r19, r19, 3
/* 800B4654 000B1594  3A B8 00 06 */	addi r21, r24, 6
/* 800B4658 000B1598  56 73 18 38 */	slwi r19, r19, 3
/* 800B465C 000B159C  22 B5 00 03 */	subfic r21, r21, 3
/* 800B4660 000B15A0  3A F8 00 07 */	addi r23, r24, 7
/* 800B4664 000B15A4  56 B5 18 38 */	slwi r21, r21, 3
/* 800B4668 000B15A8  22 F7 00 03 */	subfic r23, r23, 3
/* 800B466C 000B15AC  56 F7 18 38 */	slwi r23, r23, 3
/* 800B4670 000B15B0  7F 39 5B 78 */	or r25, r25, r11
/* 800B4674 000B15B4  7D 49 48 30 */	slw r9, r10, r9
/* 800B4678 000B15B8  7F 39 4B 78 */	or r25, r25, r9
/* 800B467C 000B15BC  7D 07 38 30 */	slw r7, r8, r7
/* 800B4680 000B15C0  7F 39 3B 78 */	or r25, r25, r7
/* 800B4684 000B15C4  7C C5 28 30 */	slw r5, r6, r5
/* 800B4688 000B15C8  7F 39 2B 78 */	or r25, r25, r5
/* 800B468C 000B15CC  7C 83 18 30 */	slw r3, r4, r3
/* 800B4690 000B15D0  7F 39 1B 78 */	or r25, r25, r3
/* 800B4694 000B15D4  7C 00 98 30 */	slw r0, r0, r19
/* 800B4698 000B15D8  7F 39 03 78 */	or r25, r25, r0
/* 800B469C 000B15DC  7E 80 A8 30 */	slw r0, r20, r21
/* 800B46A0 000B15E0  7F 39 03 78 */	or r25, r25, r0
/* 800B46A4 000B15E4  7E C0 B8 30 */	slw r0, r22, r23
/* 800B46A8 000B15E8  7F 39 03 78 */	or r25, r25, r0
/* 800B46AC 000B15EC  39 8C 00 08 */	addi r12, r12, 8
/* 800B46B0 000B15F0  3B 18 00 08 */	addi r24, r24, 8
/* 800B46B4 000B15F4  42 00 FF 40 */	bdnz lbl_800B45F4
/* 800B46B8 000B15F8  48 00 00 9C */	b lbl_800B4754
lbl_800B46BC:
/* 800B46BC 000B15FC  7C 18 F0 50 */	subf r0, r24, r30
/* 800B46C0 000B1600  7C 18 F0 00 */	cmpw r24, r30
/* 800B46C4 000B1604  7C 09 03 A6 */	mtctr r0
/* 800B46C8 000B1608  40 80 00 24 */	bge lbl_800B46EC
lbl_800B46CC:
/* 800B46CC 000B160C  20 18 00 03 */	subfic r0, r24, 3
/* 800B46D0 000B1610  88 64 00 00 */	lbz r3, 0(r4)
/* 800B46D4 000B1614  54 00 18 38 */	slwi r0, r0, 3
/* 800B46D8 000B1618  7C 60 00 30 */	slw r0, r3, r0
/* 800B46DC 000B161C  7F 39 03 78 */	or r25, r25, r0
/* 800B46E0 000B1620  38 84 00 01 */	addi r4, r4, 1
/* 800B46E4 000B1624  3B 18 00 01 */	addi r24, r24, 1
/* 800B46E8 000B1628  42 00 FF E4 */	bdnz lbl_800B46CC
lbl_800B46EC:
/* 800B46EC 000B162C  1C 1C 00 14 */	mulli r0, r28, 0x14
/* 800B46F0 000B1630  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800B46F4 000B1634  38 63 68 00 */	addi r3, r3, 0xCC006800@l
/* 800B46F8 000B1638  7C 63 02 14 */	add r3, r3, r0
/* 800B46FC 000B163C  93 23 00 10 */	stw r25, 0x10(r3)
lbl_800B4700:
/* 800B4700 000B1640  28 1F 00 01 */	cmplwi r31, 1
/* 800B4704 000B1644  93 BB 00 14 */	stw r29, 0x14(r27)
/* 800B4708 000B1648  41 82 00 0C */	beq lbl_800B4714
/* 800B470C 000B164C  7F C3 F3 78 */	mr r3, r30
/* 800B4710 000B1650  48 00 00 08 */	b lbl_800B4718
lbl_800B4714:
/* 800B4714 000B1654  38 60 00 00 */	li r3, 0
lbl_800B4718:
/* 800B4718 000B1658  1C 1C 00 14 */	mulli r0, r28, 0x14
/* 800B471C 000B165C  90 7B 00 10 */	stw r3, 0x10(r27)
/* 800B4720 000B1660  57 E5 10 3A */	slwi r5, r31, 2
/* 800B4724 000B1664  38 9E FF FF */	addi r4, r30, -1
/* 800B4728 000B1668  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800B472C 000B166C  38 63 68 00 */	addi r3, r3, 0xCC006800@l
/* 800B4730 000B1670  60 A5 00 01 */	ori r5, r5, 1
/* 800B4734 000B1674  54 84 20 36 */	slwi r4, r4, 4
/* 800B4738 000B1678  7C A4 23 78 */	or r4, r5, r4
/* 800B473C 000B167C  7C 63 02 14 */	add r3, r3, r0
/* 800B4740 000B1680  90 83 00 0C */	stw r4, 0xc(r3)
/* 800B4744 000B1684  7F 43 D3 78 */	mr r3, r26
/* 800B4748 000B1688  4B FD BA AD */	bl OSRestoreInterrupts
/* 800B474C 000B168C  38 60 00 01 */	li r3, 1
/* 800B4750 000B1690  48 00 00 0C */	b lbl_800B475C
lbl_800B4754:
/* 800B4754 000B1694  7C 9D C2 14 */	add r4, r29, r24
/* 800B4758 000B1698  4B FF FF 64 */	b lbl_800B46BC
lbl_800B475C:
/* 800B475C 000B169C  BA 61 00 24 */	lmw r19, 0x24(r1)
/* 800B4760 000B16A0  80 01 00 5C */	lwz r0, 0x5c(r1)
/* 800B4764 000B16A4  38 21 00 58 */	addi r1, r1, 0x58
/* 800B4768 000B16A8  7C 08 03 A6 */	mtlr r0
/* 800B476C 000B16AC  4E 80 00 20 */	blr 

.global EXIImmEx
EXIImmEx:
/* 800B4770 000B16B0  7C 08 02 A6 */	mflr r0
/* 800B4774 000B16B4  90 01 00 04 */	stw r0, 4(r1)
/* 800B4778 000B16B8  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 800B477C 000B16BC  BF 61 00 1C */	stmw r27, 0x1c(r1)
/* 800B4780 000B16C0  3B 63 00 00 */	addi r27, r3, 0
/* 800B4784 000B16C4  3B 84 00 00 */	addi r28, r4, 0
/* 800B4788 000B16C8  3B A5 00 00 */	addi r29, r5, 0
/* 800B478C 000B16CC  3B C6 00 00 */	addi r30, r6, 0
/* 800B4790 000B16D0  48 00 00 60 */	b lbl_800B47F0
lbl_800B4794:
/* 800B4794 000B16D4  2C 1D 00 04 */	cmpwi r29, 4
/* 800B4798 000B16D8  40 80 00 0C */	bge lbl_800B47A4
/* 800B479C 000B16DC  7F BF EB 78 */	mr r31, r29
/* 800B47A0 000B16E0  48 00 00 08 */	b lbl_800B47A8
lbl_800B47A4:
/* 800B47A4 000B16E4  3B E0 00 04 */	li r31, 4
lbl_800B47A8:
/* 800B47A8 000B16E8  38 BF 00 00 */	addi r5, r31, 0
/* 800B47AC 000B16EC  38 7B 00 00 */	addi r3, r27, 0
/* 800B47B0 000B16F0  38 9C 00 00 */	addi r4, r28, 0
/* 800B47B4 000B16F4  38 DE 00 00 */	addi r6, r30, 0
/* 800B47B8 000B16F8  38 E0 00 00 */	li r7, 0
/* 800B47BC 000B16FC  4B FF FD 59 */	bl EXIImm
/* 800B47C0 000B1700  2C 03 00 00 */	cmpwi r3, 0
/* 800B47C4 000B1704  40 82 00 0C */	bne lbl_800B47D0
/* 800B47C8 000B1708  38 60 00 00 */	li r3, 0
/* 800B47CC 000B170C  48 00 00 30 */	b lbl_800B47FC
lbl_800B47D0:
/* 800B47D0 000B1710  7F 63 DB 78 */	mr r3, r27
/* 800B47D4 000B1714  48 00 01 29 */	bl EXISync
/* 800B47D8 000B1718  2C 03 00 00 */	cmpwi r3, 0
/* 800B47DC 000B171C  40 82 00 0C */	bne lbl_800B47E8
/* 800B47E0 000B1720  38 60 00 00 */	li r3, 0
/* 800B47E4 000B1724  48 00 00 18 */	b lbl_800B47FC
lbl_800B47E8:
/* 800B47E8 000B1728  7F 9C FA 14 */	add r28, r28, r31
/* 800B47EC 000B172C  7F BF E8 50 */	subf r29, r31, r29
lbl_800B47F0:
/* 800B47F0 000B1730  2C 1D 00 00 */	cmpwi r29, 0
/* 800B47F4 000B1734  40 82 FF A0 */	bne lbl_800B4794
/* 800B47F8 000B1738  38 60 00 01 */	li r3, 1
lbl_800B47FC:
/* 800B47FC 000B173C  BB 61 00 1C */	lmw r27, 0x1c(r1)
/* 800B4800 000B1740  80 01 00 34 */	lwz r0, 0x34(r1)
/* 800B4804 000B1744  38 21 00 30 */	addi r1, r1, 0x30
/* 800B4808 000B1748  7C 08 03 A6 */	mtlr r0
/* 800B480C 000B174C  4E 80 00 20 */	blr 

.global EXIDma
EXIDma:
/* 800B4810 000B1750  7C 08 02 A6 */	mflr r0
/* 800B4814 000B1754  90 01 00 04 */	stw r0, 4(r1)
/* 800B4818 000B1758  94 21 FF C0 */	stwu r1, -0x40(r1)
/* 800B481C 000B175C  BF 21 00 24 */	stmw r25, 0x24(r1)
/* 800B4820 000B1760  3B 63 00 00 */	addi r27, r3, 0
/* 800B4824 000B1764  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B4828 000B1768  57 68 30 32 */	slwi r8, r27, 6
/* 800B482C 000B176C  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B4830 000B1770  3B 84 00 00 */	addi r28, r4, 0
/* 800B4834 000B1774  3B A5 00 00 */	addi r29, r5, 0
/* 800B4838 000B1778  3B C6 00 00 */	addi r30, r6, 0
/* 800B483C 000B177C  3B 27 00 00 */	addi r25, r7, 0
/* 800B4840 000B1780  7F 40 42 14 */	add r26, r0, r8
/* 800B4844 000B1784  4B FD B9 89 */	bl OSDisableInterrupts
/* 800B4848 000B1788  80 1A 00 0C */	lwz r0, 0xc(r26)
/* 800B484C 000B178C  3B E3 00 00 */	addi r31, r3, 0
/* 800B4850 000B1790  54 00 07 BF */	clrlwi. r0, r0, 0x1e
/* 800B4854 000B1794  40 82 00 10 */	bne lbl_800B4864
/* 800B4858 000B1798  80 1A 00 0C */	lwz r0, 0xc(r26)
/* 800B485C 000B179C  54 00 07 7B */	rlwinm. r0, r0, 0, 0x1d, 0x1d
/* 800B4860 000B17A0  40 82 00 14 */	bne lbl_800B4874
lbl_800B4864:
/* 800B4864 000B17A4  7F E3 FB 78 */	mr r3, r31
/* 800B4868 000B17A8  4B FD B9 8D */	bl OSRestoreInterrupts
/* 800B486C 000B17AC  38 60 00 00 */	li r3, 0
/* 800B4870 000B17B0  48 00 00 78 */	b lbl_800B48E8
lbl_800B4874:
/* 800B4874 000B17B4  93 3A 00 04 */	stw r25, 4(r26)
/* 800B4878 000B17B8  80 1A 00 04 */	lwz r0, 4(r26)
/* 800B487C 000B17BC  28 00 00 00 */	cmplwi r0, 0
/* 800B4880 000B17C0  41 82 00 28 */	beq lbl_800B48A8
/* 800B4884 000B17C4  38 7B 00 00 */	addi r3, r27, 0
/* 800B4888 000B17C8  38 80 00 00 */	li r4, 0
/* 800B488C 000B17CC  38 A0 00 01 */	li r5, 1
/* 800B4890 000B17D0  38 C0 00 00 */	li r6, 0
/* 800B4894 000B17D4  48 00 02 A1 */	bl EXIClearInterrupts
/* 800B4898 000B17D8  1C 1B 00 03 */	mulli r0, r27, 3
/* 800B489C 000B17DC  3C 60 00 20 */	lis r3, 0x20
/* 800B48A0 000B17E0  7C 63 04 30 */	srw r3, r3, r0
/* 800B48A4 000B17E4  4B FD BD 79 */	bl __OSUnmaskInterrupts
lbl_800B48A8:
/* 800B48A8 000B17E8  80 1A 00 0C */	lwz r0, 0xc(r26)
/* 800B48AC 000B17EC  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800B48B0 000B17F0  1C BB 00 14 */	mulli r5, r27, 0x14
/* 800B48B4 000B17F4  60 04 00 01 */	ori r4, r0, 1
/* 800B48B8 000B17F8  38 03 68 00 */	addi r0, r3, 0xCC006800@l
/* 800B48BC 000B17FC  90 9A 00 0C */	stw r4, 0xc(r26)
/* 800B48C0 000B1800  57 83 01 B4 */	rlwinm r3, r28, 0, 6, 0x1a
/* 800B48C4 000B1804  7C 80 2A 14 */	add r4, r0, r5
/* 800B48C8 000B1808  90 64 00 04 */	stw r3, 4(r4)
/* 800B48CC 000B180C  57 C0 10 3A */	slwi r0, r30, 2
/* 800B48D0 000B1810  60 00 00 03 */	ori r0, r0, 3
/* 800B48D4 000B1814  93 A4 00 08 */	stw r29, 8(r4)
/* 800B48D8 000B1818  7F E3 FB 78 */	mr r3, r31
/* 800B48DC 000B181C  90 04 00 0C */	stw r0, 0xc(r4)
/* 800B48E0 000B1820  4B FD B9 15 */	bl OSRestoreInterrupts
/* 800B48E4 000B1824  38 60 00 01 */	li r3, 1
lbl_800B48E8:
/* 800B48E8 000B1828  BB 21 00 24 */	lmw r25, 0x24(r1)
/* 800B48EC 000B182C  80 01 00 44 */	lwz r0, 0x44(r1)
/* 800B48F0 000B1830  38 21 00 40 */	addi r1, r1, 0x40
/* 800B48F4 000B1834  7C 08 03 A6 */	mtlr r0
/* 800B48F8 000B1838  4E 80 00 20 */	blr 

.global EXISync
EXISync:
/* 800B48FC 000B183C  7C 08 02 A6 */	mflr r0
/* 800B4900 000B1840  3C A0 80 3F */	lis r5, Ecb@ha
/* 800B4904 000B1844  90 01 00 04 */	stw r0, 4(r1)
/* 800B4908 000B1848  3C 80 CC 00 */	lis r4, 0xCC006800@ha
/* 800B490C 000B184C  38 05 CB A0 */	addi r0, r5, Ecb@l
/* 800B4910 000B1850  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 800B4914 000B1854  BF 61 00 1C */	stmw r27, 0x1c(r1)
/* 800B4918 000B1858  1F C3 00 14 */	mulli r30, r3, 0x14
/* 800B491C 000B185C  3B A4 68 00 */	addi r29, r4, 0xCC006800@l
/* 800B4920 000B1860  54 63 30 32 */	slwi r3, r3, 6
/* 800B4924 000B1864  7F E0 1A 14 */	add r31, r0, r3
/* 800B4928 000B1868  7F BD F2 14 */	add r29, r29, r30
/* 800B492C 000B186C  3B 80 00 00 */	li r28, 0
/* 800B4930 000B1870  48 00 01 E0 */	b lbl_800B4B10
lbl_800B4934:
/* 800B4934 000B1874  80 1D 00 0C */	lwz r0, 0xc(r29)
/* 800B4938 000B1878  54 00 07 FF */	clrlwi. r0, r0, 0x1f
/* 800B493C 000B187C  40 82 01 D4 */	bne lbl_800B4B10
/* 800B4940 000B1880  4B FD B8 8D */	bl OSDisableInterrupts
/* 800B4944 000B1884  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B4948 000B1888  3B 63 00 00 */	addi r27, r3, 0
/* 800B494C 000B188C  54 00 07 7B */	rlwinm. r0, r0, 0, 0x1d, 0x1d
/* 800B4950 000B1890  41 82 01 B4 */	beq lbl_800B4B04
/* 800B4954 000B1894  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B4958 000B1898  54 00 07 BF */	clrlwi. r0, r0, 0x1e
/* 800B495C 000B189C  41 82 01 34 */	beq lbl_800B4A90
/* 800B4960 000B18A0  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B4964 000B18A4  54 00 07 BD */	rlwinm. r0, r0, 0, 0x1e, 0x1e
/* 800B4968 000B18A8  41 82 01 1C */	beq lbl_800B4A84
/* 800B496C 000B18AC  80 9F 00 10 */	lwz r4, 0x10(r31)
/* 800B4970 000B18B0  2C 04 00 00 */	cmpwi r4, 0
/* 800B4974 000B18B4  41 82 01 10 */	beq lbl_800B4A84
/* 800B4978 000B18B8  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800B497C 000B18BC  80 FF 00 14 */	lwz r7, 0x14(r31)
/* 800B4980 000B18C0  38 03 68 00 */	addi r0, r3, 0xCC006800@l
/* 800B4984 000B18C4  7C 60 F2 14 */	add r3, r0, r30
/* 800B4988 000B18C8  80 C3 00 10 */	lwz r6, 0x10(r3)
/* 800B498C 000B18CC  38 A0 00 00 */	li r5, 0
/* 800B4990 000B18D0  40 81 00 F4 */	ble lbl_800B4A84
/* 800B4994 000B18D4  2C 04 00 08 */	cmpwi r4, 8
/* 800B4998 000B18D8  38 64 FF F8 */	addi r3, r4, -8
/* 800B499C 000B18DC  40 81 00 BC */	ble lbl_800B4A58
/* 800B49A0 000B18E0  38 03 00 07 */	addi r0, r3, 7
/* 800B49A4 000B18E4  54 00 E8 FE */	srwi r0, r0, 3
/* 800B49A8 000B18E8  2C 03 00 00 */	cmpwi r3, 0
/* 800B49AC 000B18EC  7C 09 03 A6 */	mtctr r0
/* 800B49B0 000B18F0  40 81 00 A8 */	ble lbl_800B4A58
lbl_800B49B4:
/* 800B49B4 000B18F4  20 05 00 03 */	subfic r0, r5, 3
/* 800B49B8 000B18F8  54 03 18 38 */	slwi r3, r0, 3
/* 800B49BC 000B18FC  38 05 00 01 */	addi r0, r5, 1
/* 800B49C0 000B1900  7C C8 1C 30 */	srw r8, r6, r3
/* 800B49C4 000B1904  20 00 00 03 */	subfic r0, r0, 3
/* 800B49C8 000B1908  99 07 00 00 */	stb r8, 0(r7)
/* 800B49CC 000B190C  54 03 18 38 */	slwi r3, r0, 3
/* 800B49D0 000B1910  38 05 00 02 */	addi r0, r5, 2
/* 800B49D4 000B1914  7C C3 1C 30 */	srw r3, r6, r3
/* 800B49D8 000B1918  20 00 00 03 */	subfic r0, r0, 3
/* 800B49DC 000B191C  98 67 00 01 */	stb r3, 1(r7)
/* 800B49E0 000B1920  54 00 18 38 */	slwi r0, r0, 3
/* 800B49E4 000B1924  7C C0 04 30 */	srw r0, r6, r0
/* 800B49E8 000B1928  7D 05 00 D0 */	neg r8, r5
/* 800B49EC 000B192C  98 07 00 02 */	stb r0, 2(r7)
/* 800B49F0 000B1930  55 09 18 38 */	slwi r9, r8, 3
/* 800B49F4 000B1934  39 05 00 04 */	addi r8, r5, 4
/* 800B49F8 000B1938  7C CC 4C 30 */	srw r12, r6, r9
/* 800B49FC 000B193C  21 08 00 03 */	subfic r8, r8, 3
/* 800B4A00 000B1940  99 87 00 03 */	stb r12, 3(r7)
/* 800B4A04 000B1944  55 09 18 38 */	slwi r9, r8, 3
/* 800B4A08 000B1948  39 05 00 05 */	addi r8, r5, 5
/* 800B4A0C 000B194C  7C CB 4C 30 */	srw r11, r6, r9
/* 800B4A10 000B1950  21 08 00 03 */	subfic r8, r8, 3
/* 800B4A14 000B1954  99 67 00 04 */	stb r11, 4(r7)
/* 800B4A18 000B1958  55 09 18 38 */	slwi r9, r8, 3
/* 800B4A1C 000B195C  7C CA 4C 30 */	srw r10, r6, r9
/* 800B4A20 000B1960  39 05 00 06 */	addi r8, r5, 6
/* 800B4A24 000B1964  99 47 00 05 */	stb r10, 5(r7)
/* 800B4A28 000B1968  21 28 00 03 */	subfic r9, r8, 3
/* 800B4A2C 000B196C  39 05 00 07 */	addi r8, r5, 7
/* 800B4A30 000B1970  55 29 18 38 */	slwi r9, r9, 3
/* 800B4A34 000B1974  7C C9 4C 30 */	srw r9, r6, r9
/* 800B4A38 000B1978  21 08 00 03 */	subfic r8, r8, 3
/* 800B4A3C 000B197C  99 27 00 06 */	stb r9, 6(r7)
/* 800B4A40 000B1980  55 08 18 38 */	slwi r8, r8, 3
/* 800B4A44 000B1984  7C C8 44 30 */	srw r8, r6, r8
/* 800B4A48 000B1988  99 07 00 07 */	stb r8, 7(r7)
/* 800B4A4C 000B198C  38 E7 00 08 */	addi r7, r7, 8
/* 800B4A50 000B1990  38 A5 00 08 */	addi r5, r5, 8
/* 800B4A54 000B1994  42 00 FF 60 */	bdnz lbl_800B49B4
lbl_800B4A58:
/* 800B4A58 000B1998  7C 05 20 50 */	subf r0, r5, r4
/* 800B4A5C 000B199C  7C 05 20 00 */	cmpw r5, r4
/* 800B4A60 000B19A0  7C 09 03 A6 */	mtctr r0
/* 800B4A64 000B19A4  40 80 00 20 */	bge lbl_800B4A84
lbl_800B4A68:
/* 800B4A68 000B19A8  20 05 00 03 */	subfic r0, r5, 3
/* 800B4A6C 000B19AC  54 00 18 38 */	slwi r0, r0, 3
/* 800B4A70 000B19B0  7C C0 04 30 */	srw r0, r6, r0
/* 800B4A74 000B19B4  98 07 00 00 */	stb r0, 0(r7)
/* 800B4A78 000B19B8  38 E7 00 01 */	addi r7, r7, 1
/* 800B4A7C 000B19BC  38 A5 00 01 */	addi r5, r5, 1
/* 800B4A80 000B19C0  42 00 FF E8 */	bdnz lbl_800B4A68
lbl_800B4A84:
/* 800B4A84 000B19C4  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B4A88 000B19C8  54 00 00 3A */	rlwinm r0, r0, 0, 0, 0x1d
/* 800B4A8C 000B19CC  90 1F 00 0C */	stw r0, 0xc(r31)
lbl_800B4A90:
/* 800B4A90 000B19D0  4B FD 83 E1 */	bl __OSGetDIConfig
/* 800B4A94 000B19D4  28 03 00 FF */	cmplwi r3, 0xff
/* 800B4A98 000B19D8  40 82 00 68 */	bne lbl_800B4B00
/* 800B4A9C 000B19DC  80 1F 00 10 */	lwz r0, 0x10(r31)
/* 800B4AA0 000B19E0  2C 00 00 04 */	cmpwi r0, 4
/* 800B4AA4 000B19E4  40 82 00 5C */	bne lbl_800B4B00
/* 800B4AA8 000B19E8  80 1D 00 00 */	lwz r0, 0(r29)
/* 800B4AAC 000B19EC  54 00 06 77 */	rlwinm. r0, r0, 0, 0x19, 0x1b
/* 800B4AB0 000B19F0  40 82 00 50 */	bne lbl_800B4B00
/* 800B4AB4 000B19F4  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800B4AB8 000B19F8  38 03 68 00 */	addi r0, r3, 0xCC006800@l
/* 800B4ABC 000B19FC  7C 80 F2 14 */	add r4, r0, r30
/* 800B4AC0 000B1A00  84 64 00 10 */	lwzu r3, 0x10(r4)
/* 800B4AC4 000B1A04  3C 03 FE FF */	addis r0, r3, 0xfeff
/* 800B4AC8 000B1A08  28 00 00 00 */	cmplwi r0, 0
/* 800B4ACC 000B1A0C  41 82 00 24 */	beq lbl_800B4AF0
/* 800B4AD0 000B1A10  80 64 00 00 */	lwz r3, 0(r4)
/* 800B4AD4 000B1A14  3C 03 FA F9 */	addis r0, r3, 0xfaf9
/* 800B4AD8 000B1A18  28 00 00 00 */	cmplwi r0, 0
/* 800B4ADC 000B1A1C  41 82 00 14 */	beq lbl_800B4AF0
/* 800B4AE0 000B1A20  80 64 00 00 */	lwz r3, 0(r4)
/* 800B4AE4 000B1A24  3C 03 FB DE */	addis r0, r3, 0xfbde
/* 800B4AE8 000B1A28  28 00 00 01 */	cmplwi r0, 1
/* 800B4AEC 000B1A2C  40 82 00 14 */	bne lbl_800B4B00
lbl_800B4AF0:
/* 800B4AF0 000B1A30  3C 60 80 00 */	lis r3, 0x800030E6@ha
/* 800B4AF4 000B1A34  A0 03 30 E6 */	lhz r0, 0x800030E6@l(r3)
/* 800B4AF8 000B1A38  28 00 82 00 */	cmplwi r0, 0x8200
/* 800B4AFC 000B1A3C  40 82 00 08 */	bne lbl_800B4B04
lbl_800B4B00:
/* 800B4B00 000B1A40  3B 80 00 01 */	li r28, 1
lbl_800B4B04:
/* 800B4B04 000B1A44  7F 63 DB 78 */	mr r3, r27
/* 800B4B08 000B1A48  4B FD B6 ED */	bl OSRestoreInterrupts
/* 800B4B0C 000B1A4C  48 00 00 10 */	b lbl_800B4B1C
lbl_800B4B10:
/* 800B4B10 000B1A50  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B4B14 000B1A54  54 00 07 7B */	rlwinm. r0, r0, 0, 0x1d, 0x1d
/* 800B4B18 000B1A58  40 82 FE 1C */	bne lbl_800B4934
lbl_800B4B1C:
/* 800B4B1C 000B1A5C  7F 83 E3 78 */	mr r3, r28
/* 800B4B20 000B1A60  BB 61 00 1C */	lmw r27, 0x1c(r1)
/* 800B4B24 000B1A64  80 01 00 34 */	lwz r0, 0x34(r1)
/* 800B4B28 000B1A68  38 21 00 30 */	addi r1, r1, 0x30
/* 800B4B2C 000B1A6C  7C 08 03 A6 */	mtlr r0
/* 800B4B30 000B1A70  4E 80 00 20 */	blr 

.global EXIClearInterrupts
EXIClearInterrupts:
/* 800B4B34 000B1A74  1C 03 00 14 */	mulli r0, r3, 0x14
/* 800B4B38 000B1A78  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800B4B3C 000B1A7C  38 E3 68 00 */	addi r7, r3, 0xCC006800@l
/* 800B4B40 000B1A80  7C E7 02 14 */	add r7, r7, r0
/* 800B4B44 000B1A84  80 07 00 00 */	lwz r0, 0(r7)
/* 800B4B48 000B1A88  7C 03 03 78 */	mr r3, r0
/* 800B4B4C 000B1A8C  70 00 07 F5 */	andi. r0, r0, 0x7f5
/* 800B4B50 000B1A90  2C 04 00 00 */	cmpwi r4, 0
/* 800B4B54 000B1A94  41 82 00 08 */	beq lbl_800B4B5C
/* 800B4B58 000B1A98  60 00 00 02 */	ori r0, r0, 2
lbl_800B4B5C:
/* 800B4B5C 000B1A9C  2C 05 00 00 */	cmpwi r5, 0
/* 800B4B60 000B1AA0  41 82 00 08 */	beq lbl_800B4B68
/* 800B4B64 000B1AA4  60 00 00 08 */	ori r0, r0, 8
lbl_800B4B68:
/* 800B4B68 000B1AA8  2C 06 00 00 */	cmpwi r6, 0
/* 800B4B6C 000B1AAC  41 82 00 08 */	beq lbl_800B4B74
/* 800B4B70 000B1AB0  60 00 08 00 */	ori r0, r0, 0x800
lbl_800B4B74:
/* 800B4B74 000B1AB4  90 07 00 00 */	stw r0, 0(r7)
/* 800B4B78 000B1AB8  4E 80 00 20 */	blr 

.global EXISetExiCallback
EXISetExiCallback:
/* 800B4B7C 000B1ABC  7C 08 02 A6 */	mflr r0
/* 800B4B80 000B1AC0  90 01 00 04 */	stw r0, 4(r1)
/* 800B4B84 000B1AC4  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800B4B88 000B1AC8  BF 61 00 14 */	stmw r27, 0x14(r1)
/* 800B4B8C 000B1ACC  3B 63 00 00 */	addi r27, r3, 0
/* 800B4B90 000B1AD0  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B4B94 000B1AD4  57 60 30 32 */	slwi r0, r27, 6
/* 800B4B98 000B1AD8  3B E3 CB A0 */	addi r31, r3, Ecb@l
/* 800B4B9C 000B1ADC  7F DF 02 14 */	add r30, r31, r0
/* 800B4BA0 000B1AE0  3B 84 00 00 */	addi r28, r4, 0
/* 800B4BA4 000B1AE4  4B FD B6 29 */	bl OSDisableInterrupts
/* 800B4BA8 000B1AE8  83 BE 00 00 */	lwz r29, 0(r30)
/* 800B4BAC 000B1AEC  2C 1B 00 02 */	cmpwi r27, 2
/* 800B4BB0 000B1AF0  93 9E 00 00 */	stw r28, 0(r30)
/* 800B4BB4 000B1AF4  7C 7C 1B 78 */	mr r28, r3
/* 800B4BB8 000B1AF8  41 82 00 14 */	beq lbl_800B4BCC
/* 800B4BBC 000B1AFC  38 7B 00 00 */	addi r3, r27, 0
/* 800B4BC0 000B1B00  38 9E 00 00 */	addi r4, r30, 0
/* 800B4BC4 000B1B04  4B FF F8 5D */	bl SetExiInterruptMask
/* 800B4BC8 000B1B08  48 00 00 10 */	b lbl_800B4BD8
lbl_800B4BCC:
/* 800B4BCC 000B1B0C  38 9F 00 00 */	addi r4, r31, 0
/* 800B4BD0 000B1B10  38 60 00 00 */	li r3, 0
/* 800B4BD4 000B1B14  4B FF F8 4D */	bl SetExiInterruptMask
lbl_800B4BD8:
/* 800B4BD8 000B1B18  7F 83 E3 78 */	mr r3, r28
/* 800B4BDC 000B1B1C  4B FD B6 19 */	bl OSRestoreInterrupts
/* 800B4BE0 000B1B20  7F A3 EB 78 */	mr r3, r29
/* 800B4BE4 000B1B24  BB 61 00 14 */	lmw r27, 0x14(r1)
/* 800B4BE8 000B1B28  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800B4BEC 000B1B2C  38 21 00 28 */	addi r1, r1, 0x28
/* 800B4BF0 000B1B30  7C 08 03 A6 */	mtlr r0
/* 800B4BF4 000B1B34  4E 80 00 20 */	blr 

.global __EXIProbe
__EXIProbe:
/* 800B4BF8 000B1B38  7C 08 02 A6 */	mflr r0
/* 800B4BFC 000B1B3C  90 01 00 04 */	stw r0, 4(r1)
/* 800B4C00 000B1B40  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800B4C04 000B1B44  BF 61 00 14 */	stmw r27, 0x14(r1)
/* 800B4C08 000B1B48  3B 83 00 00 */	addi r28, r3, 0
/* 800B4C0C 000B1B4C  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B4C10 000B1B50  2C 1C 00 02 */	cmpwi r28, 2
/* 800B4C14 000B1B54  57 84 30 32 */	slwi r4, r28, 6
/* 800B4C18 000B1B58  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B4C1C 000B1B5C  7F E0 22 14 */	add r31, r0, r4
/* 800B4C20 000B1B60  40 82 00 0C */	bne lbl_800B4C2C
/* 800B4C24 000B1B64  38 60 00 01 */	li r3, 1
/* 800B4C28 000B1B68  48 00 01 30 */	b lbl_800B4D58
lbl_800B4C2C:
/* 800B4C2C 000B1B6C  3B A0 00 01 */	li r29, 1
/* 800B4C30 000B1B70  4B FD B5 9D */	bl OSDisableInterrupts
/* 800B4C34 000B1B74  1C BC 00 14 */	mulli r5, r28, 0x14
/* 800B4C38 000B1B78  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B4C3C 000B1B7C  3C 80 CC 00 */	lis r4, 0xCC006800@ha
/* 800B4C40 000B1B80  38 C4 68 00 */	addi r6, r4, 0xCC006800@l
/* 800B4C44 000B1B84  7C C6 2A 14 */	add r6, r6, r5
/* 800B4C48 000B1B88  54 00 07 39 */	rlwinm. r0, r0, 0, 0x1c, 0x1c
/* 800B4C4C 000B1B8C  80 E6 00 00 */	lwz r7, 0(r6)
/* 800B4C50 000B1B90  7C 7E 1B 78 */	mr r30, r3
/* 800B4C54 000B1B94  40 82 00 CC */	bne lbl_800B4D20
/* 800B4C58 000B1B98  54 E0 05 29 */	rlwinm. r0, r7, 0, 0x14, 0x14
/* 800B4C5C 000B1B9C  41 82 00 2C */	beq lbl_800B4C88
/* 800B4C60 000B1BA0  80 A6 00 00 */	lwz r5, 0(r6)
/* 800B4C64 000B1BA4  3C 60 80 00 */	lis r3, 0x800030C0@ha
/* 800B4C68 000B1BA8  38 80 00 00 */	li r4, 0
/* 800B4C6C 000B1BAC  70 A5 07 F5 */	andi. r5, r5, 0x7f5
/* 800B4C70 000B1BB0  57 80 10 3A */	slwi r0, r28, 2
/* 800B4C74 000B1BB4  38 63 30 C0 */	addi r3, r3, 0x800030C0@l
/* 800B4C78 000B1BB8  60 A5 08 00 */	ori r5, r5, 0x800
/* 800B4C7C 000B1BBC  90 A6 00 00 */	stw r5, 0(r6)
/* 800B4C80 000B1BC0  90 9F 00 20 */	stw r4, 0x20(r31)
/* 800B4C84 000B1BC4  7C 83 01 2E */	stwx r4, r3, r0
lbl_800B4C88:
/* 800B4C88 000B1BC8  54 E0 04 E7 */	rlwinm. r0, r7, 0, 0x13, 0x13
/* 800B4C8C 000B1BCC  41 82 00 74 */	beq lbl_800B4D00
/* 800B4C90 000B1BD0  3F E0 80 00 */	lis r31, 0x800000F8@ha
/* 800B4C94 000B1BD4  80 1F 00 F8 */	lwz r0, 0x800000F8@l(r31)
/* 800B4C98 000B1BD8  3C 60 10 62 */	lis r3, 0x10624DD3@ha
/* 800B4C9C 000B1BDC  38 63 4D D3 */	addi r3, r3, 0x10624DD3@l
/* 800B4CA0 000B1BE0  54 00 F0 BE */	srwi r0, r0, 2
/* 800B4CA4 000B1BE4  7C 03 00 16 */	mulhwu r0, r3, r0
/* 800B4CA8 000B1BE8  54 1B D1 BE */	srwi r27, r0, 6
/* 800B4CAC 000B1BEC  4B FD F1 4D */	bl OSGetTime
/* 800B4CB0 000B1BF0  38 DB 00 00 */	addi r6, r27, 0
/* 800B4CB4 000B1BF4  38 A0 00 00 */	li r5, 0
/* 800B4CB8 000B1BF8  4B FC E0 4D */	bl __div2i
/* 800B4CBC 000B1BFC  38 A0 00 00 */	li r5, 0
/* 800B4CC0 000B1C00  38 C0 00 64 */	li r6, 0x64
/* 800B4CC4 000B1C04  4B FC E0 41 */	bl __div2i
/* 800B4CC8 000B1C08  57 80 10 3A */	slwi r0, r28, 2
/* 800B4CCC 000B1C0C  38 7F 30 C0 */	addi r3, r31, 0x30c0
/* 800B4CD0 000B1C10  7C 63 02 14 */	add r3, r3, r0
/* 800B4CD4 000B1C14  80 03 00 00 */	lwz r0, 0(r3)
/* 800B4CD8 000B1C18  38 84 00 01 */	addi r4, r4, 1
/* 800B4CDC 000B1C1C  2C 00 00 00 */	cmpwi r0, 0
/* 800B4CE0 000B1C20  40 82 00 08 */	bne lbl_800B4CE8
/* 800B4CE4 000B1C24  90 83 00 00 */	stw r4, 0(r3)
lbl_800B4CE8:
/* 800B4CE8 000B1C28  80 03 00 00 */	lwz r0, 0(r3)
/* 800B4CEC 000B1C2C  7C 00 20 50 */	subf r0, r0, r4
/* 800B4CF0 000B1C30  2C 00 00 03 */	cmpwi r0, 3
/* 800B4CF4 000B1C34  40 80 00 58 */	bge lbl_800B4D4C
/* 800B4CF8 000B1C38  3B A0 00 00 */	li r29, 0
/* 800B4CFC 000B1C3C  48 00 00 50 */	b lbl_800B4D4C
lbl_800B4D00:
/* 800B4D00 000B1C40  38 80 00 00 */	li r4, 0
/* 800B4D04 000B1C44  3C 60 80 00 */	lis r3, 0x800030C0@ha
/* 800B4D08 000B1C48  90 9F 00 20 */	stw r4, 0x20(r31)
/* 800B4D0C 000B1C4C  57 80 10 3A */	slwi r0, r28, 2
/* 800B4D10 000B1C50  38 63 30 C0 */	addi r3, r3, 0x800030C0@l
/* 800B4D14 000B1C54  7C 83 01 2E */	stwx r4, r3, r0
/* 800B4D18 000B1C58  3B A0 00 00 */	li r29, 0
/* 800B4D1C 000B1C5C  48 00 00 30 */	b lbl_800B4D4C
lbl_800B4D20:
/* 800B4D20 000B1C60  54 E0 04 E7 */	rlwinm. r0, r7, 0, 0x13, 0x13
/* 800B4D24 000B1C64  41 82 00 0C */	beq lbl_800B4D30
/* 800B4D28 000B1C68  54 E0 05 29 */	rlwinm. r0, r7, 0, 0x14, 0x14
/* 800B4D2C 000B1C6C  41 82 00 20 */	beq lbl_800B4D4C
lbl_800B4D30:
/* 800B4D30 000B1C70  38 80 00 00 */	li r4, 0
/* 800B4D34 000B1C74  3C 60 80 00 */	lis r3, 0x800030C0@ha
/* 800B4D38 000B1C78  90 9F 00 20 */	stw r4, 0x20(r31)
/* 800B4D3C 000B1C7C  57 80 10 3A */	slwi r0, r28, 2
/* 800B4D40 000B1C80  38 63 30 C0 */	addi r3, r3, 0x800030C0@l
/* 800B4D44 000B1C84  7C 83 01 2E */	stwx r4, r3, r0
/* 800B4D48 000B1C88  3B A0 00 00 */	li r29, 0
lbl_800B4D4C:
/* 800B4D4C 000B1C8C  7F C3 F3 78 */	mr r3, r30
/* 800B4D50 000B1C90  4B FD B4 A5 */	bl OSRestoreInterrupts
/* 800B4D54 000B1C94  7F A3 EB 78 */	mr r3, r29
lbl_800B4D58:
/* 800B4D58 000B1C98  BB 61 00 14 */	lmw r27, 0x14(r1)
/* 800B4D5C 000B1C9C  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800B4D60 000B1CA0  38 21 00 28 */	addi r1, r1, 0x28
/* 800B4D64 000B1CA4  7C 08 03 A6 */	mtlr r0
/* 800B4D68 000B1CA8  4E 80 00 20 */	blr 

.global EXIProbe
EXIProbe:
/* 800B4D6C 000B1CAC  7C 08 02 A6 */	mflr r0
/* 800B4D70 000B1CB0  90 01 00 04 */	stw r0, 4(r1)
/* 800B4D74 000B1CB4  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800B4D78 000B1CB8  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800B4D7C 000B1CBC  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800B4D80 000B1CC0  3B C3 00 00 */	addi r30, r3, 0
/* 800B4D84 000B1CC4  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B4D88 000B1CC8  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B4D8C 000B1CCC  57 C4 30 32 */	slwi r4, r30, 6
/* 800B4D90 000B1CD0  38 7E 00 00 */	addi r3, r30, 0
/* 800B4D94 000B1CD4  7F E0 22 14 */	add r31, r0, r4
/* 800B4D98 000B1CD8  4B FF FE 61 */	bl __EXIProbe
/* 800B4D9C 000B1CDC  2C 03 00 00 */	cmpwi r3, 0
/* 800B4DA0 000B1CE0  41 82 00 34 */	beq lbl_800B4DD4
/* 800B4DA4 000B1CE4  80 1F 00 20 */	lwz r0, 0x20(r31)
/* 800B4DA8 000B1CE8  2C 00 00 00 */	cmpwi r0, 0
/* 800B4DAC 000B1CEC  40 82 00 28 */	bne lbl_800B4DD4
/* 800B4DB0 000B1CF0  38 7E 00 00 */	addi r3, r30, 0
/* 800B4DB4 000B1CF4  38 A1 00 0C */	addi r5, r1, 0xc
/* 800B4DB8 000B1CF8  38 80 00 00 */	li r4, 0
/* 800B4DBC 000B1CFC  48 00 0B B5 */	bl EXIGetID
/* 800B4DC0 000B1D00  2C 03 00 00 */	cmpwi r3, 0
/* 800B4DC4 000B1D04  41 82 00 0C */	beq lbl_800B4DD0
/* 800B4DC8 000B1D08  38 60 00 01 */	li r3, 1
/* 800B4DCC 000B1D0C  48 00 00 08 */	b lbl_800B4DD4
lbl_800B4DD0:
/* 800B4DD0 000B1D10  38 60 00 00 */	li r3, 0
lbl_800B4DD4:
/* 800B4DD4 000B1D14  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800B4DD8 000B1D18  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800B4DDC 000B1D1C  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800B4DE0 000B1D20  38 21 00 18 */	addi r1, r1, 0x18
/* 800B4DE4 000B1D24  7C 08 03 A6 */	mtlr r0
/* 800B4DE8 000B1D28  4E 80 00 20 */	blr 

.global EXIProbeEx
EXIProbeEx:
/* 800B4DEC 000B1D2C  7C 08 02 A6 */	mflr r0
/* 800B4DF0 000B1D30  90 01 00 04 */	stw r0, 4(r1)
/* 800B4DF4 000B1D34  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800B4DF8 000B1D38  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800B4DFC 000B1D3C  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800B4E00 000B1D40  3B C3 00 00 */	addi r30, r3, 0
/* 800B4E04 000B1D44  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B4E08 000B1D48  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B4E0C 000B1D4C  57 C4 30 32 */	slwi r4, r30, 6
/* 800B4E10 000B1D50  38 7E 00 00 */	addi r3, r30, 0
/* 800B4E14 000B1D54  7F E0 22 14 */	add r31, r0, r4
/* 800B4E18 000B1D58  4B FF FD E1 */	bl __EXIProbe
/* 800B4E1C 000B1D5C  2C 03 00 00 */	cmpwi r3, 0
/* 800B4E20 000B1D60  41 82 00 34 */	beq lbl_800B4E54
/* 800B4E24 000B1D64  80 1F 00 20 */	lwz r0, 0x20(r31)
/* 800B4E28 000B1D68  2C 00 00 00 */	cmpwi r0, 0
/* 800B4E2C 000B1D6C  40 82 00 28 */	bne lbl_800B4E54
/* 800B4E30 000B1D70  38 7E 00 00 */	addi r3, r30, 0
/* 800B4E34 000B1D74  38 A1 00 0C */	addi r5, r1, 0xc
/* 800B4E38 000B1D78  38 80 00 00 */	li r4, 0
/* 800B4E3C 000B1D7C  48 00 0B 35 */	bl EXIGetID
/* 800B4E40 000B1D80  2C 03 00 00 */	cmpwi r3, 0
/* 800B4E44 000B1D84  41 82 00 0C */	beq lbl_800B4E50
/* 800B4E48 000B1D88  38 60 00 01 */	li r3, 1
/* 800B4E4C 000B1D8C  48 00 00 08 */	b lbl_800B4E54
lbl_800B4E50:
/* 800B4E50 000B1D90  38 60 00 00 */	li r3, 0
lbl_800B4E54:
/* 800B4E54 000B1D94  2C 03 00 00 */	cmpwi r3, 0
/* 800B4E58 000B1D98  41 82 00 0C */	beq lbl_800B4E64
/* 800B4E5C 000B1D9C  38 60 00 01 */	li r3, 1
/* 800B4E60 000B1DA0  48 00 00 28 */	b lbl_800B4E88
lbl_800B4E64:
/* 800B4E64 000B1DA4  3C 60 80 00 */	lis r3, 0x800030C0@ha
/* 800B4E68 000B1DA8  57 C0 10 3A */	slwi r0, r30, 2
/* 800B4E6C 000B1DAC  38 63 30 C0 */	addi r3, r3, 0x800030C0@l
/* 800B4E70 000B1DB0  7C 03 00 2E */	lwzx r0, r3, r0
/* 800B4E74 000B1DB4  2C 00 00 00 */	cmpwi r0, 0
/* 800B4E78 000B1DB8  41 82 00 0C */	beq lbl_800B4E84
/* 800B4E7C 000B1DBC  38 60 00 00 */	li r3, 0
/* 800B4E80 000B1DC0  48 00 00 08 */	b lbl_800B4E88
lbl_800B4E84:
/* 800B4E84 000B1DC4  38 60 FF FF */	li r3, -1
lbl_800B4E88:
/* 800B4E88 000B1DC8  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800B4E8C 000B1DCC  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800B4E90 000B1DD0  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800B4E94 000B1DD4  38 21 00 18 */	addi r1, r1, 0x18
/* 800B4E98 000B1DD8  7C 08 03 A6 */	mtlr r0
/* 800B4E9C 000B1DDC  4E 80 00 20 */	blr 

.global EXIAttach
EXIAttach:
/* 800B4EA0 000B1DE0  7C 08 02 A6 */	mflr r0
/* 800B4EA4 000B1DE4  90 01 00 04 */	stw r0, 4(r1)
/* 800B4EA8 000B1DE8  94 21 FF C0 */	stwu r1, -0x40(r1)
/* 800B4EAC 000B1DEC  BF 61 00 2C */	stmw r27, 0x2c(r1)
/* 800B4EB0 000B1DF0  3B 63 00 00 */	addi r27, r3, 0
/* 800B4EB4 000B1DF4  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B4EB8 000B1DF8  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B4EBC 000B1DFC  57 65 30 32 */	slwi r5, r27, 6
/* 800B4EC0 000B1E00  3B 84 00 00 */	addi r28, r4, 0
/* 800B4EC4 000B1E04  38 7B 00 00 */	addi r3, r27, 0
/* 800B4EC8 000B1E08  7F C0 2A 14 */	add r30, r0, r5
/* 800B4ECC 000B1E0C  4B FF FD 2D */	bl __EXIProbe
/* 800B4ED0 000B1E10  2C 03 00 00 */	cmpwi r3, 0
/* 800B4ED4 000B1E14  41 82 00 20 */	beq lbl_800B4EF4
/* 800B4ED8 000B1E18  80 1E 00 20 */	lwz r0, 0x20(r30)
/* 800B4EDC 000B1E1C  2C 00 00 00 */	cmpwi r0, 0
/* 800B4EE0 000B1E20  40 82 00 14 */	bne lbl_800B4EF4
/* 800B4EE4 000B1E24  38 7B 00 00 */	addi r3, r27, 0
/* 800B4EE8 000B1E28  38 A1 00 1C */	addi r5, r1, 0x1c
/* 800B4EEC 000B1E2C  38 80 00 00 */	li r4, 0
/* 800B4EF0 000B1E30  48 00 0A 81 */	bl EXIGetID
lbl_800B4EF4:
/* 800B4EF4 000B1E34  4B FD B2 D9 */	bl OSDisableInterrupts
/* 800B4EF8 000B1E38  80 1E 00 20 */	lwz r0, 0x20(r30)
/* 800B4EFC 000B1E3C  3B A3 00 00 */	addi r29, r3, 0
/* 800B4F00 000B1E40  2C 00 00 00 */	cmpwi r0, 0
/* 800B4F04 000B1E44  40 82 00 14 */	bne lbl_800B4F18
/* 800B4F08 000B1E48  7F A3 EB 78 */	mr r3, r29
/* 800B4F0C 000B1E4C  4B FD B2 E9 */	bl OSRestoreInterrupts
/* 800B4F10 000B1E50  38 60 00 00 */	li r3, 0
/* 800B4F14 000B1E54  48 00 00 84 */	b lbl_800B4F98
lbl_800B4F18:
/* 800B4F18 000B1E58  4B FD B2 B5 */	bl OSDisableInterrupts
/* 800B4F1C 000B1E5C  80 1E 00 0C */	lwz r0, 0xc(r30)
/* 800B4F20 000B1E60  3B E3 00 00 */	addi r31, r3, 0
/* 800B4F24 000B1E64  54 00 07 39 */	rlwinm. r0, r0, 0, 0x1c, 0x1c
/* 800B4F28 000B1E68  40 82 00 14 */	bne lbl_800B4F3C
/* 800B4F2C 000B1E6C  7F 63 DB 78 */	mr r3, r27
/* 800B4F30 000B1E70  4B FF FC C9 */	bl __EXIProbe
/* 800B4F34 000B1E74  2C 03 00 00 */	cmpwi r3, 0
/* 800B4F38 000B1E78  40 82 00 14 */	bne lbl_800B4F4C
lbl_800B4F3C:
/* 800B4F3C 000B1E7C  7F E3 FB 78 */	mr r3, r31
/* 800B4F40 000B1E80  4B FD B2 B5 */	bl OSRestoreInterrupts
/* 800B4F44 000B1E84  3B E0 00 00 */	li r31, 0
/* 800B4F48 000B1E88  48 00 00 44 */	b lbl_800B4F8C
lbl_800B4F4C:
/* 800B4F4C 000B1E8C  38 7B 00 00 */	addi r3, r27, 0
/* 800B4F50 000B1E90  38 80 00 01 */	li r4, 1
/* 800B4F54 000B1E94  38 A0 00 00 */	li r5, 0
/* 800B4F58 000B1E98  38 C0 00 00 */	li r6, 0
/* 800B4F5C 000B1E9C  4B FF FB D9 */	bl EXIClearInterrupts
/* 800B4F60 000B1EA0  1C 1B 00 03 */	mulli r0, r27, 3
/* 800B4F64 000B1EA4  93 9E 00 08 */	stw r28, 8(r30)
/* 800B4F68 000B1EA8  3C 60 00 10 */	lis r3, 0x10
/* 800B4F6C 000B1EAC  7C 63 04 30 */	srw r3, r3, r0
/* 800B4F70 000B1EB0  4B FD B6 AD */	bl __OSUnmaskInterrupts
/* 800B4F74 000B1EB4  80 1E 00 0C */	lwz r0, 0xc(r30)
/* 800B4F78 000B1EB8  38 7F 00 00 */	addi r3, r31, 0
/* 800B4F7C 000B1EBC  60 00 00 08 */	ori r0, r0, 8
/* 800B4F80 000B1EC0  90 1E 00 0C */	stw r0, 0xc(r30)
/* 800B4F84 000B1EC4  4B FD B2 71 */	bl OSRestoreInterrupts
/* 800B4F88 000B1EC8  3B E0 00 01 */	li r31, 1
lbl_800B4F8C:
/* 800B4F8C 000B1ECC  7F A3 EB 78 */	mr r3, r29
/* 800B4F90 000B1ED0  4B FD B2 65 */	bl OSRestoreInterrupts
/* 800B4F94 000B1ED4  7F E3 FB 78 */	mr r3, r31
lbl_800B4F98:
/* 800B4F98 000B1ED8  BB 61 00 2C */	lmw r27, 0x2c(r1)
/* 800B4F9C 000B1EDC  80 01 00 44 */	lwz r0, 0x44(r1)
/* 800B4FA0 000B1EE0  38 21 00 40 */	addi r1, r1, 0x40
/* 800B4FA4 000B1EE4  7C 08 03 A6 */	mtlr r0
/* 800B4FA8 000B1EE8  4E 80 00 20 */	blr 

.global EXIDetach
EXIDetach:
/* 800B4FAC 000B1EEC  7C 08 02 A6 */	mflr r0
/* 800B4FB0 000B1EF0  90 01 00 04 */	stw r0, 4(r1)
/* 800B4FB4 000B1EF4  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800B4FB8 000B1EF8  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800B4FBC 000B1EFC  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800B4FC0 000B1F00  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800B4FC4 000B1F04  3B A3 00 00 */	addi r29, r3, 0
/* 800B4FC8 000B1F08  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B4FCC 000B1F0C  57 A4 30 32 */	slwi r4, r29, 6
/* 800B4FD0 000B1F10  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B4FD4 000B1F14  7F E0 22 14 */	add r31, r0, r4
/* 800B4FD8 000B1F18  4B FD B1 F5 */	bl OSDisableInterrupts
/* 800B4FDC 000B1F1C  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B4FE0 000B1F20  3B C3 00 00 */	addi r30, r3, 0
/* 800B4FE4 000B1F24  54 00 07 39 */	rlwinm. r0, r0, 0, 0x1c, 0x1c
/* 800B4FE8 000B1F28  40 82 00 14 */	bne lbl_800B4FFC
/* 800B4FEC 000B1F2C  7F C3 F3 78 */	mr r3, r30
/* 800B4FF0 000B1F30  4B FD B2 05 */	bl OSRestoreInterrupts
/* 800B4FF4 000B1F34  38 60 00 01 */	li r3, 1
/* 800B4FF8 000B1F38  48 00 00 54 */	b lbl_800B504C
lbl_800B4FFC:
/* 800B4FFC 000B1F3C  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B5000 000B1F40  54 00 06 F7 */	rlwinm. r0, r0, 0, 0x1b, 0x1b
/* 800B5004 000B1F44  41 82 00 20 */	beq lbl_800B5024
/* 800B5008 000B1F48  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 800B500C 000B1F4C  28 00 00 00 */	cmplwi r0, 0
/* 800B5010 000B1F50  40 82 00 14 */	bne lbl_800B5024
/* 800B5014 000B1F54  7F C3 F3 78 */	mr r3, r30
/* 800B5018 000B1F58  4B FD B1 DD */	bl OSRestoreInterrupts
/* 800B501C 000B1F5C  38 60 00 00 */	li r3, 0
/* 800B5020 000B1F60  48 00 00 2C */	b lbl_800B504C
lbl_800B5024:
/* 800B5024 000B1F64  80 7F 00 0C */	lwz r3, 0xc(r31)
/* 800B5028 000B1F68  1C 1D 00 03 */	mulli r0, r29, 3
/* 800B502C 000B1F6C  54 64 07 76 */	rlwinm r4, r3, 0, 0x1d, 0x1b
/* 800B5030 000B1F70  3C 60 00 70 */	lis r3, 0x70
/* 800B5034 000B1F74  90 9F 00 0C */	stw r4, 0xc(r31)
/* 800B5038 000B1F78  7C 63 04 30 */	srw r3, r3, r0
/* 800B503C 000B1F7C  4B FD B5 59 */	bl __OSMaskInterrupts
/* 800B5040 000B1F80  7F C3 F3 78 */	mr r3, r30
/* 800B5044 000B1F84  4B FD B1 B1 */	bl OSRestoreInterrupts
/* 800B5048 000B1F88  38 60 00 01 */	li r3, 1
lbl_800B504C:
/* 800B504C 000B1F8C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800B5050 000B1F90  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800B5054 000B1F94  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800B5058 000B1F98  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800B505C 000B1F9C  38 21 00 20 */	addi r1, r1, 0x20
/* 800B5060 000B1FA0  7C 08 03 A6 */	mtlr r0
/* 800B5064 000B1FA4  4E 80 00 20 */	blr 

.global EXISelect
EXISelect:
/* 800B5068 000B1FA8  7C 08 02 A6 */	mflr r0
/* 800B506C 000B1FAC  90 01 00 04 */	stw r0, 4(r1)
/* 800B5070 000B1FB0  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 800B5074 000B1FB4  BF 61 00 1C */	stmw r27, 0x1c(r1)
/* 800B5078 000B1FB8  3B 63 00 00 */	addi r27, r3, 0
/* 800B507C 000B1FBC  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B5080 000B1FC0  57 66 30 32 */	slwi r6, r27, 6
/* 800B5084 000B1FC4  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B5088 000B1FC8  3B 84 00 00 */	addi r28, r4, 0
/* 800B508C 000B1FCC  3B A5 00 00 */	addi r29, r5, 0
/* 800B5090 000B1FD0  7F E0 32 14 */	add r31, r0, r6
/* 800B5094 000B1FD4  4B FD B1 39 */	bl OSDisableInterrupts
/* 800B5098 000B1FD8  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B509C 000B1FDC  3B C3 00 00 */	addi r30, r3, 0
/* 800B50A0 000B1FE0  54 00 07 7B */	rlwinm. r0, r0, 0, 0x1d, 0x1d
/* 800B50A4 000B1FE4  40 82 00 48 */	bne lbl_800B50EC
/* 800B50A8 000B1FE8  2C 1B 00 02 */	cmpwi r27, 2
/* 800B50AC 000B1FEC  41 82 00 50 */	beq lbl_800B50FC
/* 800B50B0 000B1FF0  28 1C 00 00 */	cmplwi r28, 0
/* 800B50B4 000B1FF4  40 82 00 20 */	bne lbl_800B50D4
/* 800B50B8 000B1FF8  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B50BC 000B1FFC  54 00 07 39 */	rlwinm. r0, r0, 0, 0x1c, 0x1c
/* 800B50C0 000B2000  40 82 00 14 */	bne lbl_800B50D4
/* 800B50C4 000B2004  7F 63 DB 78 */	mr r3, r27
/* 800B50C8 000B2008  4B FF FB 31 */	bl __EXIProbe
/* 800B50CC 000B200C  2C 03 00 00 */	cmpwi r3, 0
/* 800B50D0 000B2010  41 82 00 1C */	beq lbl_800B50EC
lbl_800B50D4:
/* 800B50D4 000B2014  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B50D8 000B2018  54 00 06 F7 */	rlwinm. r0, r0, 0, 0x1b, 0x1b
/* 800B50DC 000B201C  41 82 00 10 */	beq lbl_800B50EC
/* 800B50E0 000B2020  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 800B50E4 000B2024  7C 00 E0 40 */	cmplw r0, r28
/* 800B50E8 000B2028  41 82 00 14 */	beq lbl_800B50FC
lbl_800B50EC:
/* 800B50EC 000B202C  7F C3 F3 78 */	mr r3, r30
/* 800B50F0 000B2030  4B FD B1 05 */	bl OSRestoreInterrupts
/* 800B50F4 000B2034  38 60 00 00 */	li r3, 0
/* 800B50F8 000B2038  48 00 00 88 */	b lbl_800B5180
lbl_800B50FC:
/* 800B50FC 000B203C  80 9F 00 0C */	lwz r4, 0xc(r31)
/* 800B5100 000B2040  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800B5104 000B2044  1C 1B 00 14 */	mulli r0, r27, 0x14
/* 800B5108 000B2048  60 84 00 04 */	ori r4, r4, 4
/* 800B510C 000B204C  38 A3 68 00 */	addi r5, r3, 0xCC006800@l
/* 800B5110 000B2050  90 9F 00 0C */	stw r4, 0xc(r31)
/* 800B5114 000B2054  7C A5 02 14 */	add r5, r5, r0
/* 800B5118 000B2058  80 85 00 00 */	lwz r4, 0(r5)
/* 800B511C 000B205C  38 00 00 01 */	li r0, 1
/* 800B5120 000B2060  7C 00 E0 30 */	slw r0, r0, r28
/* 800B5124 000B2064  54 03 38 30 */	slwi r3, r0, 7
/* 800B5128 000B2068  57 A0 20 36 */	slwi r0, r29, 4
/* 800B512C 000B206C  70 84 04 05 */	andi. r4, r4, 0x405
/* 800B5130 000B2070  7C 60 03 78 */	or r0, r3, r0
/* 800B5134 000B2074  7C 84 03 78 */	or r4, r4, r0
/* 800B5138 000B2078  90 85 00 00 */	stw r4, 0(r5)
/* 800B513C 000B207C  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B5140 000B2080  54 00 07 39 */	rlwinm. r0, r0, 0, 0x1c, 0x1c
/* 800B5144 000B2084  41 82 00 30 */	beq lbl_800B5174
/* 800B5148 000B2088  2C 1B 00 01 */	cmpwi r27, 1
/* 800B514C 000B208C  41 82 00 20 */	beq lbl_800B516C
/* 800B5150 000B2090  40 80 00 24 */	bge lbl_800B5174
/* 800B5154 000B2094  2C 1B 00 00 */	cmpwi r27, 0
/* 800B5158 000B2098  40 80 00 08 */	bge lbl_800B5160
/* 800B515C 000B209C  48 00 00 18 */	b lbl_800B5174
lbl_800B5160:
/* 800B5160 000B20A0  3C 60 00 10 */	lis r3, 0x10
/* 800B5164 000B20A4  4B FD B4 31 */	bl __OSMaskInterrupts
/* 800B5168 000B20A8  48 00 00 0C */	b lbl_800B5174
lbl_800B516C:
/* 800B516C 000B20AC  3C 60 00 02 */	lis r3, 2
/* 800B5170 000B20B0  4B FD B4 25 */	bl __OSMaskInterrupts
lbl_800B5174:
/* 800B5174 000B20B4  7F C3 F3 78 */	mr r3, r30
/* 800B5178 000B20B8  4B FD B0 7D */	bl OSRestoreInterrupts
/* 800B517C 000B20BC  38 60 00 01 */	li r3, 1
lbl_800B5180:
/* 800B5180 000B20C0  BB 61 00 1C */	lmw r27, 0x1c(r1)
/* 800B5184 000B20C4  80 01 00 34 */	lwz r0, 0x34(r1)
/* 800B5188 000B20C8  38 21 00 30 */	addi r1, r1, 0x30
/* 800B518C 000B20CC  7C 08 03 A6 */	mtlr r0
/* 800B5190 000B20D0  4E 80 00 20 */	blr 

.global EXIDeselect
EXIDeselect:
/* 800B5194 000B20D4  7C 08 02 A6 */	mflr r0
/* 800B5198 000B20D8  90 01 00 04 */	stw r0, 4(r1)
/* 800B519C 000B20DC  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800B51A0 000B20E0  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800B51A4 000B20E4  3B E3 00 00 */	addi r31, r3, 0
/* 800B51A8 000B20E8  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B51AC 000B20EC  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800B51B0 000B20F0  57 E4 30 32 */	slwi r4, r31, 6
/* 800B51B4 000B20F4  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B51B8 000B20F8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800B51BC 000B20FC  7F C0 22 14 */	add r30, r0, r4
/* 800B51C0 000B2100  93 81 00 10 */	stw r28, 0x10(r1)
/* 800B51C4 000B2104  4B FD B0 09 */	bl OSDisableInterrupts
/* 800B51C8 000B2108  80 1E 00 0C */	lwz r0, 0xc(r30)
/* 800B51CC 000B210C  3B 83 00 00 */	addi r28, r3, 0
/* 800B51D0 000B2110  54 00 07 7B */	rlwinm. r0, r0, 0, 0x1d, 0x1d
/* 800B51D4 000B2114  40 82 00 14 */	bne lbl_800B51E8
/* 800B51D8 000B2118  7F 83 E3 78 */	mr r3, r28
/* 800B51DC 000B211C  4B FD B0 19 */	bl OSRestoreInterrupts
/* 800B51E0 000B2120  38 60 00 00 */	li r3, 0
/* 800B51E4 000B2124  48 00 00 A0 */	b lbl_800B5284
lbl_800B51E8:
/* 800B51E8 000B2128  80 9E 00 0C */	lwz r4, 0xc(r30)
/* 800B51EC 000B212C  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800B51F0 000B2130  1C 1F 00 14 */	mulli r0, r31, 0x14
/* 800B51F4 000B2134  54 84 07 B8 */	rlwinm r4, r4, 0, 0x1e, 0x1c
/* 800B51F8 000B2138  38 63 68 00 */	addi r3, r3, 0xCC006800@l
/* 800B51FC 000B213C  90 9E 00 0C */	stw r4, 0xc(r30)
/* 800B5200 000B2140  7C 63 02 14 */	add r3, r3, r0
/* 800B5204 000B2144  83 A3 00 00 */	lwz r29, 0(r3)
/* 800B5208 000B2148  73 A0 04 05 */	andi. r0, r29, 0x405
/* 800B520C 000B214C  90 03 00 00 */	stw r0, 0(r3)
/* 800B5210 000B2150  80 1E 00 0C */	lwz r0, 0xc(r30)
/* 800B5214 000B2154  54 00 07 39 */	rlwinm. r0, r0, 0, 0x1c, 0x1c
/* 800B5218 000B2158  41 82 00 30 */	beq lbl_800B5248
/* 800B521C 000B215C  2C 1F 00 01 */	cmpwi r31, 1
/* 800B5220 000B2160  41 82 00 20 */	beq lbl_800B5240
/* 800B5224 000B2164  40 80 00 24 */	bge lbl_800B5248
/* 800B5228 000B2168  2C 1F 00 00 */	cmpwi r31, 0
/* 800B522C 000B216C  40 80 00 08 */	bge lbl_800B5234
/* 800B5230 000B2170  48 00 00 18 */	b lbl_800B5248
lbl_800B5234:
/* 800B5234 000B2174  3C 60 00 10 */	lis r3, 0x10
/* 800B5238 000B2178  4B FD B3 E5 */	bl __OSUnmaskInterrupts
/* 800B523C 000B217C  48 00 00 0C */	b lbl_800B5248
lbl_800B5240:
/* 800B5240 000B2180  3C 60 00 02 */	lis r3, 2
/* 800B5244 000B2184  4B FD B3 D9 */	bl __OSUnmaskInterrupts
lbl_800B5248:
/* 800B5248 000B2188  7F 83 E3 78 */	mr r3, r28
/* 800B524C 000B218C  4B FD AF A9 */	bl OSRestoreInterrupts
/* 800B5250 000B2190  2C 1F 00 02 */	cmpwi r31, 2
/* 800B5254 000B2194  41 82 00 2C */	beq lbl_800B5280
/* 800B5258 000B2198  57 A0 06 31 */	rlwinm. r0, r29, 0, 0x18, 0x18
/* 800B525C 000B219C  41 82 00 24 */	beq lbl_800B5280
/* 800B5260 000B21A0  7F E3 FB 78 */	mr r3, r31
/* 800B5264 000B21A4  4B FF F9 95 */	bl __EXIProbe
/* 800B5268 000B21A8  2C 03 00 00 */	cmpwi r3, 0
/* 800B526C 000B21AC  41 82 00 0C */	beq lbl_800B5278
/* 800B5270 000B21B0  38 60 00 01 */	li r3, 1
/* 800B5274 000B21B4  48 00 00 10 */	b lbl_800B5284
lbl_800B5278:
/* 800B5278 000B21B8  38 60 00 00 */	li r3, 0
/* 800B527C 000B21BC  48 00 00 08 */	b lbl_800B5284
lbl_800B5280:
/* 800B5280 000B21C0  38 60 00 01 */	li r3, 1
lbl_800B5284:
/* 800B5284 000B21C4  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800B5288 000B21C8  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800B528C 000B21CC  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800B5290 000B21D0  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800B5294 000B21D4  83 81 00 10 */	lwz r28, 0x10(r1)
/* 800B5298 000B21D8  38 21 00 20 */	addi r1, r1, 0x20
/* 800B529C 000B21DC  7C 08 03 A6 */	mtlr r0
/* 800B52A0 000B21E0  4E 80 00 20 */	blr 

.global EXIIntrruptHandler
EXIIntrruptHandler:
/* 800B52A4 000B21E4  7C 08 02 A6 */	mflr r0
/* 800B52A8 000B21E8  7C 65 07 34 */	extsh r5, r3
/* 800B52AC 000B21EC  90 01 00 04 */	stw r0, 4(r1)
/* 800B52B0 000B21F0  3C 60 55 55 */	lis r3, 0x55555556@ha
/* 800B52B4 000B21F4  38 05 FF F7 */	addi r0, r5, -9
/* 800B52B8 000B21F8  38 63 55 56 */	addi r3, r3, 0x55555556@l
/* 800B52BC 000B21FC  94 21 FD 08 */	stwu r1, -0x2f8(r1)
/* 800B52C0 000B2200  7C 63 00 96 */	mulhw r3, r3, r0
/* 800B52C4 000B2204  93 E1 02 F4 */	stw r31, 0x2f4(r1)
/* 800B52C8 000B2208  93 C1 02 F0 */	stw r30, 0x2f0(r1)
/* 800B52CC 000B220C  54 60 0F FE */	srwi r0, r3, 0x1f
/* 800B52D0 000B2210  93 A1 02 EC */	stw r29, 0x2ec(r1)
/* 800B52D4 000B2214  7F E3 02 14 */	add r31, r3, r0
/* 800B52D8 000B2218  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800B52DC 000B221C  38 E3 68 00 */	addi r7, r3, 0xCC006800@l
/* 800B52E0 000B2220  1C 1F 00 14 */	mulli r0, r31, 0x14
/* 800B52E4 000B2224  7C E7 02 14 */	add r7, r7, r0
/* 800B52E8 000B2228  80 C7 00 00 */	lwz r6, 0(r7)
/* 800B52EC 000B222C  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B52F0 000B2230  57 E5 30 32 */	slwi r5, r31, 6
/* 800B52F4 000B2234  70 C6 07 F5 */	andi. r6, r6, 0x7f5
/* 800B52F8 000B2238  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B52FC 000B223C  7C 60 2A 14 */	add r3, r0, r5
/* 800B5300 000B2240  60 C6 00 02 */	ori r6, r6, 2
/* 800B5304 000B2244  90 C7 00 00 */	stw r6, 0(r7)
/* 800B5308 000B2248  7C 9D 23 78 */	mr r29, r4
/* 800B530C 000B224C  80 03 00 00 */	lwz r0, 0(r3)
/* 800B5310 000B2250  28 00 00 00 */	cmplwi r0, 0
/* 800B5314 000B2254  7C 1E 03 78 */	mr r30, r0
/* 800B5318 000B2258  41 82 00 38 */	beq lbl_800B5350
/* 800B531C 000B225C  38 61 00 18 */	addi r3, r1, 0x18
/* 800B5320 000B2260  4B FD 96 C5 */	bl OSClearContext
/* 800B5324 000B2264  38 61 00 18 */	addi r3, r1, 0x18
/* 800B5328 000B2268  4B FD 94 F5 */	bl OSSetCurrentContext
/* 800B532C 000B226C  39 9E 00 00 */	addi r12, r30, 0
/* 800B5330 000B2270  7D 88 03 A6 */	mtlr r12
/* 800B5334 000B2274  38 7F 00 00 */	addi r3, r31, 0
/* 800B5338 000B2278  38 9D 00 00 */	addi r4, r29, 0
/* 800B533C 000B227C  4E 80 00 21 */	blrl 
/* 800B5340 000B2280  38 61 00 18 */	addi r3, r1, 0x18
/* 800B5344 000B2284  4B FD 96 A1 */	bl OSClearContext
/* 800B5348 000B2288  7F A3 EB 78 */	mr r3, r29
/* 800B534C 000B228C  4B FD 94 D1 */	bl OSSetCurrentContext
lbl_800B5350:
/* 800B5350 000B2290  80 01 02 FC */	lwz r0, 0x2fc(r1)
/* 800B5354 000B2294  83 E1 02 F4 */	lwz r31, 0x2f4(r1)
/* 800B5358 000B2298  83 C1 02 F0 */	lwz r30, 0x2f0(r1)
/* 800B535C 000B229C  83 A1 02 EC */	lwz r29, 0x2ec(r1)
/* 800B5360 000B22A0  38 21 02 F8 */	addi r1, r1, 0x2f8
/* 800B5364 000B22A4  7C 08 03 A6 */	mtlr r0
/* 800B5368 000B22A8  4E 80 00 20 */	blr 

.global TCIntrruptHandler
TCIntrruptHandler:
/* 800B536C 000B22AC  7C 08 02 A6 */	mflr r0
/* 800B5370 000B22B0  7C 66 07 34 */	extsh r6, r3
/* 800B5374 000B22B4  90 01 00 04 */	stw r0, 4(r1)
/* 800B5378 000B22B8  3C 60 55 55 */	lis r3, 0x55555556@ha
/* 800B537C 000B22BC  38 06 FF F6 */	addi r0, r6, -10
/* 800B5380 000B22C0  94 21 FD 08 */	stwu r1, -0x2f8(r1)
/* 800B5384 000B22C4  38 63 55 56 */	addi r3, r3, 0x55555556@l
/* 800B5388 000B22C8  7C 63 00 96 */	mulhw r3, r3, r0
/* 800B538C 000B22CC  93 E1 02 F4 */	stw r31, 0x2f4(r1)
/* 800B5390 000B22D0  93 C1 02 F0 */	stw r30, 0x2f0(r1)
/* 800B5394 000B22D4  93 A1 02 EC */	stw r29, 0x2ec(r1)
/* 800B5398 000B22D8  54 60 0F FE */	srwi r0, r3, 0x1f
/* 800B539C 000B22DC  7F C3 02 14 */	add r30, r3, r0
/* 800B53A0 000B22E0  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B53A4 000B22E4  93 81 02 E8 */	stw r28, 0x2e8(r1)
/* 800B53A8 000B22E8  3C 00 80 00 */	lis r0, 0x8000
/* 800B53AC 000B22EC  57 C5 30 32 */	slwi r5, r30, 6
/* 800B53B0 000B22F0  38 63 CB A0 */	addi r3, r3, Ecb@l
/* 800B53B4 000B22F4  7F E3 2A 14 */	add r31, r3, r5
/* 800B53B8 000B22F8  3B 84 00 00 */	addi r28, r4, 0
/* 800B53BC 000B22FC  7C 03 34 30 */	srw r3, r0, r6
/* 800B53C0 000B2300  4B FD B1 D5 */	bl __OSMaskInterrupts
/* 800B53C4 000B2304  1C DE 00 14 */	mulli r6, r30, 0x14
/* 800B53C8 000B2308  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800B53CC 000B230C  38 83 68 00 */	addi r4, r3, 0xCC006800@l
/* 800B53D0 000B2310  7C 84 32 14 */	add r4, r4, r6
/* 800B53D4 000B2314  80 04 00 00 */	lwz r0, 0(r4)
/* 800B53D8 000B2318  70 00 07 F5 */	andi. r0, r0, 0x7f5
/* 800B53DC 000B231C  60 00 00 08 */	ori r0, r0, 8
/* 800B53E0 000B2320  90 04 00 00 */	stw r0, 0(r4)
/* 800B53E4 000B2324  80 1F 00 04 */	lwz r0, 4(r31)
/* 800B53E8 000B2328  28 00 00 00 */	cmplwi r0, 0
/* 800B53EC 000B232C  7C 1D 03 78 */	mr r29, r0
/* 800B53F0 000B2330  41 82 01 74 */	beq lbl_800B5564
/* 800B53F4 000B2334  38 A0 00 00 */	li r5, 0
/* 800B53F8 000B2338  90 BF 00 04 */	stw r5, 4(r31)
/* 800B53FC 000B233C  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B5400 000B2340  54 00 07 BF */	clrlwi. r0, r0, 0x1e
/* 800B5404 000B2344  41 82 01 2C */	beq lbl_800B5530
/* 800B5408 000B2348  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B540C 000B234C  54 00 07 BD */	rlwinm. r0, r0, 0, 0x1e, 0x1e
/* 800B5410 000B2350  41 82 01 14 */	beq lbl_800B5524
/* 800B5414 000B2354  80 9F 00 10 */	lwz r4, 0x10(r31)
/* 800B5418 000B2358  2C 04 00 00 */	cmpwi r4, 0
/* 800B541C 000B235C  41 82 01 08 */	beq lbl_800B5524
/* 800B5420 000B2360  38 03 68 00 */	addi r0, r3, 0x6800
/* 800B5424 000B2364  80 FF 00 14 */	lwz r7, 0x14(r31)
/* 800B5428 000B2368  7C 60 32 14 */	add r3, r0, r6
/* 800B542C 000B236C  80 C3 00 10 */	lwz r6, 0x10(r3)
/* 800B5430 000B2370  40 81 00 F4 */	ble lbl_800B5524
/* 800B5434 000B2374  2C 04 00 08 */	cmpwi r4, 8
/* 800B5438 000B2378  38 64 FF F8 */	addi r3, r4, -8
/* 800B543C 000B237C  40 81 00 BC */	ble lbl_800B54F8
/* 800B5440 000B2380  38 03 00 07 */	addi r0, r3, 7
/* 800B5444 000B2384  54 00 E8 FE */	srwi r0, r0, 3
/* 800B5448 000B2388  2C 03 00 00 */	cmpwi r3, 0
/* 800B544C 000B238C  7C 09 03 A6 */	mtctr r0
/* 800B5450 000B2390  40 81 00 A8 */	ble lbl_800B54F8
lbl_800B5454:
/* 800B5454 000B2394  20 05 00 03 */	subfic r0, r5, 3
/* 800B5458 000B2398  54 03 18 38 */	slwi r3, r0, 3
/* 800B545C 000B239C  38 05 00 01 */	addi r0, r5, 1
/* 800B5460 000B23A0  7C C8 1C 30 */	srw r8, r6, r3
/* 800B5464 000B23A4  20 00 00 03 */	subfic r0, r0, 3
/* 800B5468 000B23A8  99 07 00 00 */	stb r8, 0(r7)
/* 800B546C 000B23AC  54 03 18 38 */	slwi r3, r0, 3
/* 800B5470 000B23B0  38 05 00 02 */	addi r0, r5, 2
/* 800B5474 000B23B4  7C C3 1C 30 */	srw r3, r6, r3
/* 800B5478 000B23B8  20 00 00 03 */	subfic r0, r0, 3
/* 800B547C 000B23BC  98 67 00 01 */	stb r3, 1(r7)
/* 800B5480 000B23C0  54 00 18 38 */	slwi r0, r0, 3
/* 800B5484 000B23C4  7C C0 04 30 */	srw r0, r6, r0
/* 800B5488 000B23C8  7D 05 00 D0 */	neg r8, r5
/* 800B548C 000B23CC  98 07 00 02 */	stb r0, 2(r7)
/* 800B5490 000B23D0  55 09 18 38 */	slwi r9, r8, 3
/* 800B5494 000B23D4  39 05 00 04 */	addi r8, r5, 4
/* 800B5498 000B23D8  7C CC 4C 30 */	srw r12, r6, r9
/* 800B549C 000B23DC  21 08 00 03 */	subfic r8, r8, 3
/* 800B54A0 000B23E0  99 87 00 03 */	stb r12, 3(r7)
/* 800B54A4 000B23E4  55 09 18 38 */	slwi r9, r8, 3
/* 800B54A8 000B23E8  39 05 00 05 */	addi r8, r5, 5
/* 800B54AC 000B23EC  7C CB 4C 30 */	srw r11, r6, r9
/* 800B54B0 000B23F0  21 08 00 03 */	subfic r8, r8, 3
/* 800B54B4 000B23F4  99 67 00 04 */	stb r11, 4(r7)
/* 800B54B8 000B23F8  55 09 18 38 */	slwi r9, r8, 3
/* 800B54BC 000B23FC  7C CA 4C 30 */	srw r10, r6, r9
/* 800B54C0 000B2400  39 05 00 06 */	addi r8, r5, 6
/* 800B54C4 000B2404  99 47 00 05 */	stb r10, 5(r7)
/* 800B54C8 000B2408  21 28 00 03 */	subfic r9, r8, 3
/* 800B54CC 000B240C  39 05 00 07 */	addi r8, r5, 7
/* 800B54D0 000B2410  55 29 18 38 */	slwi r9, r9, 3
/* 800B54D4 000B2414  7C C9 4C 30 */	srw r9, r6, r9
/* 800B54D8 000B2418  21 08 00 03 */	subfic r8, r8, 3
/* 800B54DC 000B241C  99 27 00 06 */	stb r9, 6(r7)
/* 800B54E0 000B2420  55 08 18 38 */	slwi r8, r8, 3
/* 800B54E4 000B2424  7C C8 44 30 */	srw r8, r6, r8
/* 800B54E8 000B2428  99 07 00 07 */	stb r8, 7(r7)
/* 800B54EC 000B242C  38 E7 00 08 */	addi r7, r7, 8
/* 800B54F0 000B2430  38 A5 00 08 */	addi r5, r5, 8
/* 800B54F4 000B2434  42 00 FF 60 */	bdnz lbl_800B5454
lbl_800B54F8:
/* 800B54F8 000B2438  7C 05 20 50 */	subf r0, r5, r4
/* 800B54FC 000B243C  7C 05 20 00 */	cmpw r5, r4
/* 800B5500 000B2440  7C 09 03 A6 */	mtctr r0
/* 800B5504 000B2444  40 80 00 20 */	bge lbl_800B5524
lbl_800B5508:
/* 800B5508 000B2448  20 05 00 03 */	subfic r0, r5, 3
/* 800B550C 000B244C  54 00 18 38 */	slwi r0, r0, 3
/* 800B5510 000B2450  7C C0 04 30 */	srw r0, r6, r0
/* 800B5514 000B2454  98 07 00 00 */	stb r0, 0(r7)
/* 800B5518 000B2458  38 E7 00 01 */	addi r7, r7, 1
/* 800B551C 000B245C  38 A5 00 01 */	addi r5, r5, 1
/* 800B5520 000B2460  42 00 FF E8 */	bdnz lbl_800B5508
lbl_800B5524:
/* 800B5524 000B2464  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B5528 000B2468  54 00 00 3A */	rlwinm r0, r0, 0, 0, 0x1d
/* 800B552C 000B246C  90 1F 00 0C */	stw r0, 0xc(r31)
lbl_800B5530:
/* 800B5530 000B2470  38 61 00 20 */	addi r3, r1, 0x20
/* 800B5534 000B2474  4B FD 94 B1 */	bl OSClearContext
/* 800B5538 000B2478  38 61 00 20 */	addi r3, r1, 0x20
/* 800B553C 000B247C  4B FD 92 E1 */	bl OSSetCurrentContext
/* 800B5540 000B2480  39 9D 00 00 */	addi r12, r29, 0
/* 800B5544 000B2484  7D 88 03 A6 */	mtlr r12
/* 800B5548 000B2488  38 7E 00 00 */	addi r3, r30, 0
/* 800B554C 000B248C  38 9C 00 00 */	addi r4, r28, 0
/* 800B5550 000B2490  4E 80 00 21 */	blrl 
/* 800B5554 000B2494  38 61 00 20 */	addi r3, r1, 0x20
/* 800B5558 000B2498  4B FD 94 8D */	bl OSClearContext
/* 800B555C 000B249C  7F 83 E3 78 */	mr r3, r28
/* 800B5560 000B24A0  4B FD 92 BD */	bl OSSetCurrentContext
lbl_800B5564:
/* 800B5564 000B24A4  80 01 02 FC */	lwz r0, 0x2fc(r1)
/* 800B5568 000B24A8  83 E1 02 F4 */	lwz r31, 0x2f4(r1)
/* 800B556C 000B24AC  83 C1 02 F0 */	lwz r30, 0x2f0(r1)
/* 800B5570 000B24B0  83 A1 02 EC */	lwz r29, 0x2ec(r1)
/* 800B5574 000B24B4  83 81 02 E8 */	lwz r28, 0x2e8(r1)
/* 800B5578 000B24B8  38 21 02 F8 */	addi r1, r1, 0x2f8
/* 800B557C 000B24BC  7C 08 03 A6 */	mtlr r0
/* 800B5580 000B24C0  4E 80 00 20 */	blr 

.global EXTIntrruptHandler
EXTIntrruptHandler:
/* 800B5584 000B24C4  7C 08 02 A6 */	mflr r0
/* 800B5588 000B24C8  7C 65 07 34 */	extsh r5, r3
/* 800B558C 000B24CC  90 01 00 04 */	stw r0, 4(r1)
/* 800B5590 000B24D0  3C 60 55 55 */	lis r3, 0x55555556@ha
/* 800B5594 000B24D4  38 05 FF F5 */	addi r0, r5, -11
/* 800B5598 000B24D8  38 63 55 56 */	addi r3, r3, 0x55555556@l
/* 800B559C 000B24DC  94 21 FD 10 */	stwu r1, -0x2f0(r1)
/* 800B55A0 000B24E0  7C 63 00 96 */	mulhw r3, r3, r0
/* 800B55A4 000B24E4  BF 61 02 DC */	stmw r27, 0x2dc(r1)
/* 800B55A8 000B24E8  54 60 0F FE */	srwi r0, r3, 0x1f
/* 800B55AC 000B24EC  7F C3 02 14 */	add r30, r3, r0
/* 800B55B0 000B24F0  1C 1E 00 03 */	mulli r0, r30, 3
/* 800B55B4 000B24F4  3C 60 00 70 */	lis r3, 0x70
/* 800B55B8 000B24F8  3B 64 00 00 */	addi r27, r4, 0
/* 800B55BC 000B24FC  7C 63 04 30 */	srw r3, r3, r0
/* 800B55C0 000B2500  4B FD AF D5 */	bl __OSMaskInterrupts
/* 800B55C4 000B2504  1C 1E 00 14 */	mulli r0, r30, 0x14
/* 800B55C8 000B2508  3C 80 CC 00 */	lis r4, 0xCC006800@ha
/* 800B55CC 000B250C  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B55D0 000B2510  38 84 68 00 */	addi r4, r4, 0xCC006800@l
/* 800B55D4 000B2514  3B E0 00 00 */	li r31, 0
/* 800B55D8 000B2518  7F E4 01 2E */	stwx r31, r4, r0
/* 800B55DC 000B251C  57 C4 30 32 */	slwi r4, r30, 6
/* 800B55E0 000B2520  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B55E4 000B2524  7F A0 22 14 */	add r29, r0, r4
/* 800B55E8 000B2528  83 9D 00 08 */	lwz r28, 8(r29)
/* 800B55EC 000B252C  80 1D 00 0C */	lwz r0, 0xc(r29)
/* 800B55F0 000B2530  28 1C 00 00 */	cmplwi r28, 0
/* 800B55F4 000B2534  54 00 07 76 */	rlwinm r0, r0, 0, 0x1d, 0x1b
/* 800B55F8 000B2538  90 1D 00 0C */	stw r0, 0xc(r29)
/* 800B55FC 000B253C  41 82 00 3C */	beq lbl_800B5638
/* 800B5600 000B2540  38 61 00 10 */	addi r3, r1, 0x10
/* 800B5604 000B2544  4B FD 93 E1 */	bl OSClearContext
/* 800B5608 000B2548  38 61 00 10 */	addi r3, r1, 0x10
/* 800B560C 000B254C  4B FD 92 11 */	bl OSSetCurrentContext
/* 800B5610 000B2550  7F 8C E3 78 */	mr r12, r28
/* 800B5614 000B2554  93 FD 00 08 */	stw r31, 8(r29)
/* 800B5618 000B2558  7D 88 03 A6 */	mtlr r12
/* 800B561C 000B255C  38 7E 00 00 */	addi r3, r30, 0
/* 800B5620 000B2560  38 9B 00 00 */	addi r4, r27, 0
/* 800B5624 000B2564  4E 80 00 21 */	blrl 
/* 800B5628 000B2568  38 61 00 10 */	addi r3, r1, 0x10
/* 800B562C 000B256C  4B FD 93 B9 */	bl OSClearContext
/* 800B5630 000B2570  7F 63 DB 78 */	mr r3, r27
/* 800B5634 000B2574  4B FD 91 E9 */	bl OSSetCurrentContext
lbl_800B5638:
/* 800B5638 000B2578  BB 61 02 DC */	lmw r27, 0x2dc(r1)
/* 800B563C 000B257C  80 01 02 F4 */	lwz r0, 0x2f4(r1)
/* 800B5640 000B2580  38 21 02 F0 */	addi r1, r1, 0x2f0
/* 800B5644 000B2584  7C 08 03 A6 */	mtlr r0
/* 800B5648 000B2588  4E 80 00 20 */	blr 

.global EXIInit
EXIInit:
/* 800B564C 000B258C  7C 08 02 A6 */	mflr r0
/* 800B5650 000B2590  3C 60 00 80 */	lis r3, 0x007F8000@ha
/* 800B5654 000B2594  90 01 00 04 */	stw r0, 4(r1)
/* 800B5658 000B2598  38 63 80 00 */	addi r3, r3, 0x007F8000@l
/* 800B565C 000B259C  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800B5660 000B25A0  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800B5664 000B25A4  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800B5668 000B25A8  93 A1 00 0C */	stw r29, 0xc(r1)
/* 800B566C 000B25AC  93 81 00 08 */	stw r28, 8(r1)
/* 800B5670 000B25B0  4B FD AF 25 */	bl __OSMaskInterrupts
/* 800B5674 000B25B4  3C A0 CC 00 */	lis r5, 0xCC006800@ha
/* 800B5678 000B25B8  3B E0 00 00 */	li r31, 0
/* 800B567C 000B25BC  93 E5 68 00 */	stw r31, 0xCC006800@l(r5)
/* 800B5680 000B25C0  38 00 20 00 */	li r0, 0x2000
/* 800B5684 000B25C4  3C 60 80 0B */	lis r3, EXIIntrruptHandler@ha
/* 800B5688 000B25C8  93 E5 68 14 */	stw r31, 0x6814(r5)
/* 800B568C 000B25CC  3B 83 52 A4 */	addi r28, r3, EXIIntrruptHandler@l
/* 800B5690 000B25D0  38 9C 00 00 */	addi r4, r28, 0
/* 800B5694 000B25D4  93 E5 68 28 */	stw r31, 0x6828(r5)
/* 800B5698 000B25D8  38 60 00 09 */	li r3, 9
/* 800B569C 000B25DC  90 05 68 00 */	stw r0, 0x6800(r5)
/* 800B56A0 000B25E0  4B FD AB 79 */	bl __OSSetInterruptHandler
/* 800B56A4 000B25E4  3C 60 80 0B */	lis r3, TCIntrruptHandler@ha
/* 800B56A8 000B25E8  3B A3 53 6C */	addi r29, r3, TCIntrruptHandler@l
/* 800B56AC 000B25EC  38 9D 00 00 */	addi r4, r29, 0
/* 800B56B0 000B25F0  38 60 00 0A */	li r3, 0xa
/* 800B56B4 000B25F4  4B FD AB 65 */	bl __OSSetInterruptHandler
/* 800B56B8 000B25F8  3C 60 80 0B */	lis r3, EXTIntrruptHandler@ha
/* 800B56BC 000B25FC  3B C3 55 84 */	addi r30, r3, EXTIntrruptHandler@l
/* 800B56C0 000B2600  38 9E 00 00 */	addi r4, r30, 0
/* 800B56C4 000B2604  38 60 00 0B */	li r3, 0xb
/* 800B56C8 000B2608  4B FD AB 51 */	bl __OSSetInterruptHandler
/* 800B56CC 000B260C  38 9C 00 00 */	addi r4, r28, 0
/* 800B56D0 000B2610  38 60 00 0C */	li r3, 0xc
/* 800B56D4 000B2614  4B FD AB 45 */	bl __OSSetInterruptHandler
/* 800B56D8 000B2618  38 9D 00 00 */	addi r4, r29, 0
/* 800B56DC 000B261C  38 60 00 0D */	li r3, 0xd
/* 800B56E0 000B2620  4B FD AB 39 */	bl __OSSetInterruptHandler
/* 800B56E4 000B2624  38 9E 00 00 */	addi r4, r30, 0
/* 800B56E8 000B2628  38 60 00 0E */	li r3, 0xe
/* 800B56EC 000B262C  4B FD AB 2D */	bl __OSSetInterruptHandler
/* 800B56F0 000B2630  38 9C 00 00 */	addi r4, r28, 0
/* 800B56F4 000B2634  38 60 00 0F */	li r3, 0xf
/* 800B56F8 000B2638  4B FD AB 21 */	bl __OSSetInterruptHandler
/* 800B56FC 000B263C  38 9D 00 00 */	addi r4, r29, 0
/* 800B5700 000B2640  38 60 00 10 */	li r3, 0x10
/* 800B5704 000B2644  4B FD AB 15 */	bl __OSSetInterruptHandler
/* 800B5708 000B2648  4B FD 6E 21 */	bl OSGetConsoleType
/* 800B570C 000B264C  54 60 00 C7 */	rlwinm. r0, r3, 0, 3, 3
/* 800B5710 000B2650  41 82 00 30 */	beq lbl_800B5740
/* 800B5714 000B2654  3C A0 80 00 */	lis r5, 0x800030C4@ha
/* 800B5718 000B2658  93 E5 30 C4 */	stw r31, 0x800030C4@l(r5)
/* 800B571C 000B265C  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B5720 000B2660  38 83 CB A0 */	addi r4, r3, Ecb@l
/* 800B5724 000B2664  93 E5 30 C0 */	stw r31, 0x30c0(r5)
/* 800B5728 000B2668  38 60 00 00 */	li r3, 0
/* 800B572C 000B266C  93 E4 00 60 */	stw r31, 0x60(r4)
/* 800B5730 000B2670  93 E4 00 20 */	stw r31, 0x20(r4)
/* 800B5734 000B2674  4B FF F4 C5 */	bl __EXIProbe
/* 800B5738 000B2678  38 60 00 01 */	li r3, 1
/* 800B573C 000B267C  4B FF F4 BD */	bl __EXIProbe
lbl_800B5740:
/* 800B5740 000B2680  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800B5744 000B2684  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800B5748 000B2688  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800B574C 000B268C  83 A1 00 0C */	lwz r29, 0xc(r1)
/* 800B5750 000B2690  83 81 00 08 */	lwz r28, 8(r1)
/* 800B5754 000B2694  38 21 00 18 */	addi r1, r1, 0x18
/* 800B5758 000B2698  7C 08 03 A6 */	mtlr r0
/* 800B575C 000B269C  4E 80 00 20 */	blr 

.global EXILock
EXILock:
/* 800B5760 000B26A0  7C 08 02 A6 */	mflr r0
/* 800B5764 000B26A4  90 01 00 04 */	stw r0, 4(r1)
/* 800B5768 000B26A8  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 800B576C 000B26AC  BF 61 00 1C */	stmw r27, 0x1c(r1)
/* 800B5770 000B26B0  3B 63 00 00 */	addi r27, r3, 0
/* 800B5774 000B26B4  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B5778 000B26B8  57 66 30 32 */	slwi r6, r27, 6
/* 800B577C 000B26BC  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B5780 000B26C0  7F E0 32 14 */	add r31, r0, r6
/* 800B5784 000B26C4  3B 84 00 00 */	addi r28, r4, 0
/* 800B5788 000B26C8  3B A5 00 00 */	addi r29, r5, 0
/* 800B578C 000B26CC  4B FD AA 41 */	bl OSDisableInterrupts
/* 800B5790 000B26D0  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B5794 000B26D4  3B C3 00 00 */	addi r30, r3, 0
/* 800B5798 000B26D8  54 00 06 F7 */	rlwinm. r0, r0, 0, 0x1b, 0x1b
/* 800B579C 000B26DC  41 82 00 7C */	beq lbl_800B5818
/* 800B57A0 000B26E0  28 1D 00 00 */	cmplwi r29, 0
/* 800B57A4 000B26E4  41 82 00 64 */	beq lbl_800B5808
/* 800B57A8 000B26E8  80 9F 00 24 */	lwz r4, 0x24(r31)
/* 800B57AC 000B26EC  38 7F 00 00 */	addi r3, r31, 0
/* 800B57B0 000B26F0  2C 04 00 00 */	cmpwi r4, 0
/* 800B57B4 000B26F4  7C 89 03 A6 */	mtctr r4
/* 800B57B8 000B26F8  40 81 00 28 */	ble lbl_800B57E0
lbl_800B57BC:
/* 800B57BC 000B26FC  80 03 00 28 */	lwz r0, 0x28(r3)
/* 800B57C0 000B2700  7C 00 E0 40 */	cmplw r0, r28
/* 800B57C4 000B2704  40 82 00 14 */	bne lbl_800B57D8
/* 800B57C8 000B2708  7F C3 F3 78 */	mr r3, r30
/* 800B57CC 000B270C  4B FD AA 29 */	bl OSRestoreInterrupts
/* 800B57D0 000B2710  38 60 00 00 */	li r3, 0
/* 800B57D4 000B2714  48 00 00 6C */	b lbl_800B5840
lbl_800B57D8:
/* 800B57D8 000B2718  38 63 00 08 */	addi r3, r3, 8
/* 800B57DC 000B271C  42 00 FF E0 */	bdnz lbl_800B57BC
lbl_800B57E0:
/* 800B57E0 000B2720  54 80 18 38 */	slwi r0, r4, 3
/* 800B57E4 000B2724  7C 7F 02 14 */	add r3, r31, r0
/* 800B57E8 000B2728  93 A3 00 2C */	stw r29, 0x2c(r3)
/* 800B57EC 000B272C  80 1F 00 24 */	lwz r0, 0x24(r31)
/* 800B57F0 000B2730  54 00 18 38 */	slwi r0, r0, 3
/* 800B57F4 000B2734  7C 7F 02 14 */	add r3, r31, r0
/* 800B57F8 000B2738  93 83 00 28 */	stw r28, 0x28(r3)
/* 800B57FC 000B273C  80 7F 00 24 */	lwz r3, 0x24(r31)
/* 800B5800 000B2740  38 03 00 01 */	addi r0, r3, 1
/* 800B5804 000B2744  90 1F 00 24 */	stw r0, 0x24(r31)
lbl_800B5808:
/* 800B5808 000B2748  7F C3 F3 78 */	mr r3, r30
/* 800B580C 000B274C  4B FD A9 E9 */	bl OSRestoreInterrupts
/* 800B5810 000B2750  38 60 00 00 */	li r3, 0
/* 800B5814 000B2754  48 00 00 2C */	b lbl_800B5840
lbl_800B5818:
/* 800B5818 000B2758  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B581C 000B275C  38 7B 00 00 */	addi r3, r27, 0
/* 800B5820 000B2760  38 9F 00 00 */	addi r4, r31, 0
/* 800B5824 000B2764  60 00 00 10 */	ori r0, r0, 0x10
/* 800B5828 000B2768  90 1F 00 0C */	stw r0, 0xc(r31)
/* 800B582C 000B276C  93 9F 00 18 */	stw r28, 0x18(r31)
/* 800B5830 000B2770  4B FF EB F1 */	bl SetExiInterruptMask
/* 800B5834 000B2774  7F C3 F3 78 */	mr r3, r30
/* 800B5838 000B2778  4B FD A9 BD */	bl OSRestoreInterrupts
/* 800B583C 000B277C  38 60 00 01 */	li r3, 1
lbl_800B5840:
/* 800B5840 000B2780  BB 61 00 1C */	lmw r27, 0x1c(r1)
/* 800B5844 000B2784  80 01 00 34 */	lwz r0, 0x34(r1)
/* 800B5848 000B2788  38 21 00 30 */	addi r1, r1, 0x30
/* 800B584C 000B278C  7C 08 03 A6 */	mtlr r0
/* 800B5850 000B2790  4E 80 00 20 */	blr 

.global EXIUnlock
EXIUnlock:
/* 800B5854 000B2794  7C 08 02 A6 */	mflr r0
/* 800B5858 000B2798  90 01 00 04 */	stw r0, 4(r1)
/* 800B585C 000B279C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800B5860 000B27A0  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800B5864 000B27A4  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800B5868 000B27A8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800B586C 000B27AC  93 81 00 10 */	stw r28, 0x10(r1)
/* 800B5870 000B27B0  3B 83 00 00 */	addi r28, r3, 0
/* 800B5874 000B27B4  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B5878 000B27B8  57 84 30 32 */	slwi r4, r28, 6
/* 800B587C 000B27BC  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B5880 000B27C0  7F E0 22 14 */	add r31, r0, r4
/* 800B5884 000B27C4  4B FD A9 49 */	bl OSDisableInterrupts
/* 800B5888 000B27C8  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B588C 000B27CC  3B C3 00 00 */	addi r30, r3, 0
/* 800B5890 000B27D0  54 00 06 F7 */	rlwinm. r0, r0, 0, 0x1b, 0x1b
/* 800B5894 000B27D4  40 82 00 14 */	bne lbl_800B58A8
/* 800B5898 000B27D8  7F C3 F3 78 */	mr r3, r30
/* 800B589C 000B27DC  4B FD A9 59 */	bl OSRestoreInterrupts
/* 800B58A0 000B27E0  38 60 00 00 */	li r3, 0
/* 800B58A4 000B27E4  48 00 00 6C */	b lbl_800B5910
lbl_800B58A8:
/* 800B58A8 000B27E8  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B58AC 000B27EC  38 7C 00 00 */	addi r3, r28, 0
/* 800B58B0 000B27F0  38 9F 00 00 */	addi r4, r31, 0
/* 800B58B4 000B27F4  54 00 07 34 */	rlwinm r0, r0, 0, 0x1c, 0x1a
/* 800B58B8 000B27F8  90 1F 00 0C */	stw r0, 0xc(r31)
/* 800B58BC 000B27FC  4B FF EB 65 */	bl SetExiInterruptMask
/* 800B58C0 000B2800  80 7F 00 24 */	lwz r3, 0x24(r31)
/* 800B58C4 000B2804  2C 03 00 00 */	cmpwi r3, 0
/* 800B58C8 000B2808  40 81 00 3C */	ble lbl_800B5904
/* 800B58CC 000B280C  34 03 FF FF */	addic. r0, r3, -1
/* 800B58D0 000B2810  83 BF 00 2C */	lwz r29, 0x2c(r31)
/* 800B58D4 000B2814  90 1F 00 24 */	stw r0, 0x24(r31)
/* 800B58D8 000B2818  40 81 00 18 */	ble lbl_800B58F0
/* 800B58DC 000B281C  80 1F 00 24 */	lwz r0, 0x24(r31)
/* 800B58E0 000B2820  38 7F 00 28 */	addi r3, r31, 0x28
/* 800B58E4 000B2824  38 9F 00 30 */	addi r4, r31, 0x30
/* 800B58E8 000B2828  54 05 18 38 */	slwi r5, r0, 3
/* 800B58EC 000B282C  4B FC E3 49 */	bl memmove
lbl_800B58F0:
/* 800B58F0 000B2830  39 9D 00 00 */	addi r12, r29, 0
/* 800B58F4 000B2834  7D 88 03 A6 */	mtlr r12
/* 800B58F8 000B2838  38 7C 00 00 */	addi r3, r28, 0
/* 800B58FC 000B283C  38 80 00 00 */	li r4, 0
/* 800B5900 000B2840  4E 80 00 21 */	blrl 
lbl_800B5904:
/* 800B5904 000B2844  7F C3 F3 78 */	mr r3, r30
/* 800B5908 000B2848  4B FD A8 ED */	bl OSRestoreInterrupts
/* 800B590C 000B284C  38 60 00 01 */	li r3, 1
lbl_800B5910:
/* 800B5910 000B2850  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800B5914 000B2854  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800B5918 000B2858  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800B591C 000B285C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800B5920 000B2860  83 81 00 10 */	lwz r28, 0x10(r1)
/* 800B5924 000B2864  38 21 00 20 */	addi r1, r1, 0x20
/* 800B5928 000B2868  7C 08 03 A6 */	mtlr r0
/* 800B592C 000B286C  4E 80 00 20 */	blr 

.global EXIGetState
EXIGetState:
/* 800B5930 000B2870  3C 80 80 3F */	lis r4, Ecb@ha
/* 800B5934 000B2874  54 63 30 32 */	slwi r3, r3, 6
/* 800B5938 000B2878  38 04 CB A0 */	addi r0, r4, Ecb@l
/* 800B593C 000B287C  7C 60 1A 14 */	add r3, r0, r3
/* 800B5940 000B2880  80 63 00 0C */	lwz r3, 0xc(r3)
/* 800B5944 000B2884  4E 80 00 20 */	blr 

.global UnlockedHandler
UnlockedHandler:
/* 800B5948 000B2888  7C 08 02 A6 */	mflr r0
/* 800B594C 000B288C  38 80 00 00 */	li r4, 0
/* 800B5950 000B2890  90 01 00 04 */	stw r0, 4(r1)
/* 800B5954 000B2894  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800B5958 000B2898  38 A1 00 10 */	addi r5, r1, 0x10
/* 800B595C 000B289C  48 00 00 15 */	bl EXIGetID
/* 800B5960 000B28A0  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800B5964 000B28A4  38 21 00 18 */	addi r1, r1, 0x18
/* 800B5968 000B28A8  7C 08 03 A6 */	mtlr r0
/* 800B596C 000B28AC  4E 80 00 20 */	blr 

.global EXIGetID
EXIGetID:
/* 800B5970 000B28B0  7C 08 02 A6 */	mflr r0
/* 800B5974 000B28B4  90 01 00 04 */	stw r0, 4(r1)
/* 800B5978 000B28B8  94 21 FF C0 */	stwu r1, -0x40(r1)
/* 800B597C 000B28BC  BF 01 00 20 */	stmw r24, 0x20(r1)
/* 800B5980 000B28C0  3B 43 00 00 */	addi r26, r3, 0
/* 800B5984 000B28C4  3C 60 80 3F */	lis r3, Ecb@ha
/* 800B5988 000B28C8  2C 1A 00 02 */	cmpwi r26, 2
/* 800B598C 000B28CC  57 46 30 32 */	slwi r6, r26, 6
/* 800B5990 000B28D0  38 03 CB A0 */	addi r0, r3, Ecb@l
/* 800B5994 000B28D4  7F E0 32 14 */	add r31, r0, r6
/* 800B5998 000B28D8  3B 64 00 00 */	addi r27, r4, 0
/* 800B599C 000B28DC  3B 85 00 00 */	addi r28, r5, 0
/* 800B59A0 000B28E0  40 80 00 E0 */	bge lbl_800B5A80
/* 800B59A4 000B28E4  28 1B 00 00 */	cmplwi r27, 0
/* 800B59A8 000B28E8  40 82 00 D8 */	bne lbl_800B5A80
/* 800B59AC 000B28EC  7F 43 D3 78 */	mr r3, r26
/* 800B59B0 000B28F0  4B FF F2 49 */	bl __EXIProbe
/* 800B59B4 000B28F4  2C 03 00 00 */	cmpwi r3, 0
/* 800B59B8 000B28F8  40 82 00 0C */	bne lbl_800B59C4
/* 800B59BC 000B28FC  38 60 00 00 */	li r3, 0
/* 800B59C0 000B2900  48 00 03 18 */	b lbl_800B5CD8
lbl_800B59C4:
/* 800B59C4 000B2904  3C 60 80 00 */	lis r3, 0x800030C0@ha
/* 800B59C8 000B2908  80 9F 00 20 */	lwz r4, 0x20(r31)
/* 800B59CC 000B290C  57 40 10 3A */	slwi r0, r26, 2
/* 800B59D0 000B2910  3B C3 30 C0 */	addi r30, r3, 0x800030C0@l
/* 800B59D4 000B2914  7F DE 02 14 */	add r30, r30, r0
/* 800B59D8 000B2918  80 1E 00 00 */	lwz r0, 0(r30)
/* 800B59DC 000B291C  7C 04 00 00 */	cmpw r4, r0
/* 800B59E0 000B2920  40 82 00 14 */	bne lbl_800B59F4
/* 800B59E4 000B2924  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 800B59E8 000B2928  90 1C 00 00 */	stw r0, 0(r28)
/* 800B59EC 000B292C  80 7F 00 20 */	lwz r3, 0x20(r31)
/* 800B59F0 000B2930  48 00 02 E8 */	b lbl_800B5CD8
lbl_800B59F4:
/* 800B59F4 000B2934  4B FD A7 D9 */	bl OSDisableInterrupts
/* 800B59F8 000B2938  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B59FC 000B293C  3B A3 00 00 */	addi r29, r3, 0
/* 800B5A00 000B2940  54 00 07 39 */	rlwinm. r0, r0, 0, 0x1c, 0x1c
/* 800B5A04 000B2944  40 82 00 14 */	bne lbl_800B5A18
/* 800B5A08 000B2948  7F 43 D3 78 */	mr r3, r26
/* 800B5A0C 000B294C  4B FF F1 ED */	bl __EXIProbe
/* 800B5A10 000B2950  2C 03 00 00 */	cmpwi r3, 0
/* 800B5A14 000B2954  40 82 00 14 */	bne lbl_800B5A28
lbl_800B5A18:
/* 800B5A18 000B2958  7F A3 EB 78 */	mr r3, r29
/* 800B5A1C 000B295C  4B FD A7 D9 */	bl OSRestoreInterrupts
/* 800B5A20 000B2960  38 00 00 00 */	li r0, 0
/* 800B5A24 000B2964  48 00 00 48 */	b lbl_800B5A6C
lbl_800B5A28:
/* 800B5A28 000B2968  38 7A 00 00 */	addi r3, r26, 0
/* 800B5A2C 000B296C  38 80 00 01 */	li r4, 1
/* 800B5A30 000B2970  38 A0 00 00 */	li r5, 0
/* 800B5A34 000B2974  38 C0 00 00 */	li r6, 0
/* 800B5A38 000B2978  4B FF F0 FD */	bl EXIClearInterrupts
/* 800B5A3C 000B297C  1C 1A 00 03 */	mulli r0, r26, 3
/* 800B5A40 000B2980  38 80 00 00 */	li r4, 0
/* 800B5A44 000B2984  3C 60 00 10 */	lis r3, 0x10
/* 800B5A48 000B2988  90 9F 00 08 */	stw r4, 8(r31)
/* 800B5A4C 000B298C  7C 63 04 30 */	srw r3, r3, r0
/* 800B5A50 000B2990  4B FD AB CD */	bl __OSUnmaskInterrupts
/* 800B5A54 000B2994  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B5A58 000B2998  38 7D 00 00 */	addi r3, r29, 0
/* 800B5A5C 000B299C  60 00 00 08 */	ori r0, r0, 8
/* 800B5A60 000B29A0  90 1F 00 0C */	stw r0, 0xc(r31)
/* 800B5A64 000B29A4  4B FD A7 91 */	bl OSRestoreInterrupts
/* 800B5A68 000B29A8  38 00 00 01 */	li r0, 1
lbl_800B5A6C:
/* 800B5A6C 000B29AC  2C 00 00 00 */	cmpwi r0, 0
/* 800B5A70 000B29B0  40 82 00 0C */	bne lbl_800B5A7C
/* 800B5A74 000B29B4  38 60 00 00 */	li r3, 0
/* 800B5A78 000B29B8  48 00 02 60 */	b lbl_800B5CD8
lbl_800B5A7C:
/* 800B5A7C 000B29BC  83 BE 00 00 */	lwz r29, 0(r30)
lbl_800B5A80:
/* 800B5A80 000B29C0  2C 1A 00 02 */	cmpwi r26, 2
/* 800B5A84 000B29C4  38 00 00 00 */	li r0, 0
/* 800B5A88 000B29C8  40 80 00 10 */	bge lbl_800B5A98
/* 800B5A8C 000B29CC  28 1B 00 00 */	cmplwi r27, 0
/* 800B5A90 000B29D0  40 82 00 08 */	bne lbl_800B5A98
/* 800B5A94 000B29D4  38 00 00 01 */	li r0, 1
lbl_800B5A98:
/* 800B5A98 000B29D8  2C 00 00 00 */	cmpwi r0, 0
/* 800B5A9C 000B29DC  41 82 00 10 */	beq lbl_800B5AAC
/* 800B5AA0 000B29E0  3C 60 80 0B */	lis r3, UnlockedHandler@ha
/* 800B5AA4 000B29E4  38 A3 59 48 */	addi r5, r3, UnlockedHandler@l
/* 800B5AA8 000B29E8  48 00 00 08 */	b lbl_800B5AB0
lbl_800B5AAC:
/* 800B5AAC 000B29EC  38 A0 00 00 */	li r5, 0
lbl_800B5AB0:
/* 800B5AB0 000B29F0  38 7A 00 00 */	addi r3, r26, 0
/* 800B5AB4 000B29F4  38 9B 00 00 */	addi r4, r27, 0
/* 800B5AB8 000B29F8  4B FF FC A9 */	bl EXILock
/* 800B5ABC 000B29FC  7C 60 00 34 */	cntlzw r0, r3
/* 800B5AC0 000B2A00  54 00 D9 7E */	srwi r0, r0, 5
/* 800B5AC4 000B2A04  7C 1E 03 79 */	or. r30, r0, r0
/* 800B5AC8 000B2A08  40 82 01 34 */	bne lbl_800B5BFC
/* 800B5ACC 000B2A0C  38 7A 00 00 */	addi r3, r26, 0
/* 800B5AD0 000B2A10  38 9B 00 00 */	addi r4, r27, 0
/* 800B5AD4 000B2A14  38 A0 00 00 */	li r5, 0
/* 800B5AD8 000B2A18  4B FF F5 91 */	bl EXISelect
/* 800B5ADC 000B2A1C  7C 60 00 34 */	cntlzw r0, r3
/* 800B5AE0 000B2A20  54 00 D9 7E */	srwi r0, r0, 5
/* 800B5AE4 000B2A24  7C 1E 03 79 */	or. r30, r0, r0
/* 800B5AE8 000B2A28  40 82 00 90 */	bne lbl_800B5B78
/* 800B5AEC 000B2A2C  38 00 00 00 */	li r0, 0
/* 800B5AF0 000B2A30  90 01 00 1C */	stw r0, 0x1c(r1)
/* 800B5AF4 000B2A34  38 7A 00 00 */	addi r3, r26, 0
/* 800B5AF8 000B2A38  38 81 00 1C */	addi r4, r1, 0x1c
/* 800B5AFC 000B2A3C  38 A0 00 02 */	li r5, 2
/* 800B5B00 000B2A40  38 C0 00 01 */	li r6, 1
/* 800B5B04 000B2A44  38 E0 00 00 */	li r7, 0
/* 800B5B08 000B2A48  4B FF EA 0D */	bl EXIImm
/* 800B5B0C 000B2A4C  7C 60 00 34 */	cntlzw r0, r3
/* 800B5B10 000B2A50  54 00 D9 7E */	srwi r0, r0, 5
/* 800B5B14 000B2A54  38 7A 00 00 */	addi r3, r26, 0
/* 800B5B18 000B2A58  7F DE 03 78 */	or r30, r30, r0
/* 800B5B1C 000B2A5C  4B FF ED E1 */	bl EXISync
/* 800B5B20 000B2A60  7C 60 00 34 */	cntlzw r0, r3
/* 800B5B24 000B2A64  54 00 D9 7E */	srwi r0, r0, 5
/* 800B5B28 000B2A68  38 7A 00 00 */	addi r3, r26, 0
/* 800B5B2C 000B2A6C  38 9C 00 00 */	addi r4, r28, 0
/* 800B5B30 000B2A70  7F DE 03 78 */	or r30, r30, r0
/* 800B5B34 000B2A74  38 A0 00 04 */	li r5, 4
/* 800B5B38 000B2A78  38 C0 00 00 */	li r6, 0
/* 800B5B3C 000B2A7C  38 E0 00 00 */	li r7, 0
/* 800B5B40 000B2A80  4B FF E9 D5 */	bl EXIImm
/* 800B5B44 000B2A84  7C 60 00 34 */	cntlzw r0, r3
/* 800B5B48 000B2A88  54 00 D9 7E */	srwi r0, r0, 5
/* 800B5B4C 000B2A8C  38 7A 00 00 */	addi r3, r26, 0
/* 800B5B50 000B2A90  7F DE 03 78 */	or r30, r30, r0
/* 800B5B54 000B2A94  4B FF ED A9 */	bl EXISync
/* 800B5B58 000B2A98  7C 60 00 34 */	cntlzw r0, r3
/* 800B5B5C 000B2A9C  54 00 D9 7E */	srwi r0, r0, 5
/* 800B5B60 000B2AA0  38 7A 00 00 */	addi r3, r26, 0
/* 800B5B64 000B2AA4  7F DE 03 78 */	or r30, r30, r0
/* 800B5B68 000B2AA8  4B FF F6 2D */	bl EXIDeselect
/* 800B5B6C 000B2AAC  7C 60 00 34 */	cntlzw r0, r3
/* 800B5B70 000B2AB0  54 00 D9 7E */	srwi r0, r0, 5
/* 800B5B74 000B2AB4  7F DE 03 78 */	or r30, r30, r0
lbl_800B5B78:
/* 800B5B78 000B2AB8  4B FD A6 55 */	bl OSDisableInterrupts
/* 800B5B7C 000B2ABC  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B5B80 000B2AC0  3B 03 00 00 */	addi r24, r3, 0
/* 800B5B84 000B2AC4  54 00 06 F7 */	rlwinm. r0, r0, 0, 0x1b, 0x1b
/* 800B5B88 000B2AC8  40 82 00 10 */	bne lbl_800B5B98
/* 800B5B8C 000B2ACC  7F 03 C3 78 */	mr r3, r24
/* 800B5B90 000B2AD0  4B FD A6 65 */	bl OSRestoreInterrupts
/* 800B5B94 000B2AD4  48 00 00 68 */	b lbl_800B5BFC
lbl_800B5B98:
/* 800B5B98 000B2AD8  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B5B9C 000B2ADC  38 7A 00 00 */	addi r3, r26, 0
/* 800B5BA0 000B2AE0  38 9F 00 00 */	addi r4, r31, 0
/* 800B5BA4 000B2AE4  54 00 07 34 */	rlwinm r0, r0, 0, 0x1c, 0x1a
/* 800B5BA8 000B2AE8  90 1F 00 0C */	stw r0, 0xc(r31)
/* 800B5BAC 000B2AEC  4B FF E8 75 */	bl SetExiInterruptMask
/* 800B5BB0 000B2AF0  80 7F 00 24 */	lwz r3, 0x24(r31)
/* 800B5BB4 000B2AF4  2C 03 00 00 */	cmpwi r3, 0
/* 800B5BB8 000B2AF8  40 81 00 3C */	ble lbl_800B5BF4
/* 800B5BBC 000B2AFC  34 03 FF FF */	addic. r0, r3, -1
/* 800B5BC0 000B2B00  83 3F 00 2C */	lwz r25, 0x2c(r31)
/* 800B5BC4 000B2B04  90 1F 00 24 */	stw r0, 0x24(r31)
/* 800B5BC8 000B2B08  40 81 00 18 */	ble lbl_800B5BE0
/* 800B5BCC 000B2B0C  80 1F 00 24 */	lwz r0, 0x24(r31)
/* 800B5BD0 000B2B10  38 7F 00 28 */	addi r3, r31, 0x28
/* 800B5BD4 000B2B14  38 9F 00 30 */	addi r4, r31, 0x30
/* 800B5BD8 000B2B18  54 05 18 38 */	slwi r5, r0, 3
/* 800B5BDC 000B2B1C  4B FC E0 59 */	bl memmove
lbl_800B5BE0:
/* 800B5BE0 000B2B20  39 99 00 00 */	addi r12, r25, 0
/* 800B5BE4 000B2B24  7D 88 03 A6 */	mtlr r12
/* 800B5BE8 000B2B28  38 7A 00 00 */	addi r3, r26, 0
/* 800B5BEC 000B2B2C  38 80 00 00 */	li r4, 0
/* 800B5BF0 000B2B30  4E 80 00 21 */	blrl 
lbl_800B5BF4:
/* 800B5BF4 000B2B34  7F 03 C3 78 */	mr r3, r24
/* 800B5BF8 000B2B38  4B FD A5 FD */	bl OSRestoreInterrupts
lbl_800B5BFC:
/* 800B5BFC 000B2B3C  2C 1A 00 02 */	cmpwi r26, 2
/* 800B5C00 000B2B40  40 80 00 C4 */	bge lbl_800B5CC4
/* 800B5C04 000B2B44  28 1B 00 00 */	cmplwi r27, 0
/* 800B5C08 000B2B48  40 82 00 BC */	bne lbl_800B5CC4
/* 800B5C0C 000B2B4C  4B FD A5 C1 */	bl OSDisableInterrupts
/* 800B5C10 000B2B50  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B5C14 000B2B54  3B 03 00 00 */	addi r24, r3, 0
/* 800B5C18 000B2B58  54 00 07 39 */	rlwinm. r0, r0, 0, 0x1c, 0x1c
/* 800B5C1C 000B2B5C  40 82 00 10 */	bne lbl_800B5C2C
/* 800B5C20 000B2B60  7F 03 C3 78 */	mr r3, r24
/* 800B5C24 000B2B64  4B FD A5 D1 */	bl OSRestoreInterrupts
/* 800B5C28 000B2B68  48 00 00 4C */	b lbl_800B5C74
lbl_800B5C2C:
/* 800B5C2C 000B2B6C  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800B5C30 000B2B70  54 00 06 F7 */	rlwinm. r0, r0, 0, 0x1b, 0x1b
/* 800B5C34 000B2B74  41 82 00 1C */	beq lbl_800B5C50
/* 800B5C38 000B2B78  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 800B5C3C 000B2B7C  28 00 00 00 */	cmplwi r0, 0
/* 800B5C40 000B2B80  40 82 00 10 */	bne lbl_800B5C50
/* 800B5C44 000B2B84  7F 03 C3 78 */	mr r3, r24
/* 800B5C48 000B2B88  4B FD A5 AD */	bl OSRestoreInterrupts
/* 800B5C4C 000B2B8C  48 00 00 28 */	b lbl_800B5C74
lbl_800B5C50:
/* 800B5C50 000B2B90  80 7F 00 0C */	lwz r3, 0xc(r31)
/* 800B5C54 000B2B94  1C 1A 00 03 */	mulli r0, r26, 3
/* 800B5C58 000B2B98  54 64 07 76 */	rlwinm r4, r3, 0, 0x1d, 0x1b
/* 800B5C5C 000B2B9C  3C 60 00 70 */	lis r3, 0x70
/* 800B5C60 000B2BA0  90 9F 00 0C */	stw r4, 0xc(r31)
/* 800B5C64 000B2BA4  7C 63 04 30 */	srw r3, r3, r0
/* 800B5C68 000B2BA8  4B FD A9 2D */	bl __OSMaskInterrupts
/* 800B5C6C 000B2BAC  7F 03 C3 78 */	mr r3, r24
/* 800B5C70 000B2BB0  4B FD A5 85 */	bl OSRestoreInterrupts
lbl_800B5C74:
/* 800B5C74 000B2BB4  4B FD A5 59 */	bl OSDisableInterrupts
/* 800B5C78 000B2BB8  3C 80 80 00 */	lis r4, 0x800030C0@ha
/* 800B5C7C 000B2BBC  57 40 10 3A */	slwi r0, r26, 2
/* 800B5C80 000B2BC0  38 84 30 C0 */	addi r4, r4, 0x800030C0@l
/* 800B5C84 000B2BC4  7C 04 00 2E */	lwzx r0, r4, r0
/* 800B5C88 000B2BC8  7C 9D 00 50 */	subf r4, r29, r0
/* 800B5C8C 000B2BCC  30 04 FF FF */	addic r0, r4, -1
/* 800B5C90 000B2BD0  7C 00 21 10 */	subfe r0, r0, r4
/* 800B5C94 000B2BD4  7F DE 03 79 */	or. r30, r30, r0
/* 800B5C98 000B2BD8  40 82 00 10 */	bne lbl_800B5CA8
/* 800B5C9C 000B2BDC  80 1C 00 00 */	lwz r0, 0(r28)
/* 800B5CA0 000B2BE0  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 800B5CA4 000B2BE4  93 BF 00 20 */	stw r29, 0x20(r31)
lbl_800B5CA8:
/* 800B5CA8 000B2BE8  4B FD A5 4D */	bl OSRestoreInterrupts
/* 800B5CAC 000B2BEC  2C 1E 00 00 */	cmpwi r30, 0
/* 800B5CB0 000B2BF0  41 82 00 0C */	beq lbl_800B5CBC
/* 800B5CB4 000B2BF4  38 60 00 00 */	li r3, 0
/* 800B5CB8 000B2BF8  48 00 00 20 */	b lbl_800B5CD8
lbl_800B5CBC:
/* 800B5CBC 000B2BFC  80 7F 00 20 */	lwz r3, 0x20(r31)
/* 800B5CC0 000B2C00  48 00 00 18 */	b lbl_800B5CD8
lbl_800B5CC4:
/* 800B5CC4 000B2C04  2C 1E 00 00 */	cmpwi r30, 0
/* 800B5CC8 000B2C08  41 82 00 0C */	beq lbl_800B5CD4
/* 800B5CCC 000B2C0C  38 60 00 00 */	li r3, 0
/* 800B5CD0 000B2C10  48 00 00 08 */	b lbl_800B5CD8
lbl_800B5CD4:
/* 800B5CD4 000B2C14  38 60 00 01 */	li r3, 1
lbl_800B5CD8:
/* 800B5CD8 000B2C18  BB 01 00 20 */	lmw r24, 0x20(r1)
/* 800B5CDC 000B2C1C  80 01 00 44 */	lwz r0, 0x44(r1)
/* 800B5CE0 000B2C20  38 21 00 40 */	addi r1, r1, 0x40
/* 800B5CE4 000B2C24  7C 08 03 A6 */	mtlr r0
/* 800B5CE8 000B2C28  4E 80 00 20 */	blr 

.section .bss, "wa"  # 0x803E6000 - 0x80408AC0
Ecb:
	.skip 0xC0
